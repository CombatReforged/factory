package com.combatreforged.factory.api.world.types;

import com.combatreforged.factory.api.world.block.BlockType;
import com.combatreforged.factory.api.world.effect.StatusEffect;
import com.combatreforged.factory.api.world.entity.EntityType;
import com.google.errorprone.annotations.Immutable;

public abstract class Minecraft {
    @Immutable
    public enum Block implements BlockType {
        AIR(BlockType.Properties.Builder.create()),
        STONE(BlockType.Properties.Builder.create()),
        GRANITE(BlockType.Properties.Builder.create()),
        POLISHED_GRANITE(BlockType.Properties.Builder.create()),
        DIORITE(BlockType.Properties.Builder.create()),
        POLISHED_DIORITE(BlockType.Properties.Builder.create()),
        ANDESITE(BlockType.Properties.Builder.create()),
        POLISHED_ANDESITE(BlockType.Properties.Builder.create()),
        GRASS_BLOCK(BlockType.Properties.Builder.create()),
        DIRT(BlockType.Properties.Builder.create()),
        COARSE_DIRT(BlockType.Properties.Builder.create()),
        PODZOL(BlockType.Properties.Builder.create()),
        COBBLESTONE(BlockType.Properties.Builder.create()),
        OAK_PLANKS(BlockType.Properties.Builder.create()),
        SPRUCE_PLANKS(BlockType.Properties.Builder.create()),
        BIRCH_PLANKS(BlockType.Properties.Builder.create()),
        JUNGLE_PLANKS(BlockType.Properties.Builder.create()),
        ACACIA_PLANKS(BlockType.Properties.Builder.create()),
        DARK_OAK_PLANKS(BlockType.Properties.Builder.create()),
        OAK_SAPLING(BlockType.Properties.Builder.create()),
        SPRUCE_SAPLING(BlockType.Properties.Builder.create()),
        BIRCH_SAPLING(BlockType.Properties.Builder.create()),
        JUNGLE_SAPLING(BlockType.Properties.Builder.create()),
        ACACIA_SAPLING(BlockType.Properties.Builder.create()),
        DARK_OAK_SAPLING(BlockType.Properties.Builder.create()),
        BEDROCK(BlockType.Properties.Builder.create()),
        WATER(BlockType.Properties.Builder.create()),
        LAVA(BlockType.Properties.Builder.create()),
        SAND(BlockType.Properties.Builder.create()),
        RED_SAND(BlockType.Properties.Builder.create()),
        GRAVEL(BlockType.Properties.Builder.create()),
        GOLD_ORE(BlockType.Properties.Builder.create()),
        IRON_ORE(BlockType.Properties.Builder.create()),
        COAL_ORE(BlockType.Properties.Builder.create()),
        NETHER_GOLD_ORE(BlockType.Properties.Builder.create()),
        OAK_LOG(BlockType.Properties.Builder.create()),
        SPRUCE_LOG(BlockType.Properties.Builder.create()),
        BIRCH_LOG(BlockType.Properties.Builder.create()),
        JUNGLE_LOG(BlockType.Properties.Builder.create()),
        ACACIA_LOG(BlockType.Properties.Builder.create()),
        DARK_OAK_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_SPRUCE_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_BIRCH_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_JUNGLE_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_ACACIA_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_DARK_OAK_LOG(BlockType.Properties.Builder.create()),
        STRIPPED_OAK_LOG(BlockType.Properties.Builder.create()),
        OAK_WOOD(BlockType.Properties.Builder.create()),
        SPRUCE_WOOD(BlockType.Properties.Builder.create()),
        BIRCH_WOOD(BlockType.Properties.Builder.create()),
        JUNGLE_WOOD(BlockType.Properties.Builder.create()),
        ACACIA_WOOD(BlockType.Properties.Builder.create()),
        DARK_OAK_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_OAK_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_SPRUCE_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_BIRCH_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_JUNGLE_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_ACACIA_WOOD(BlockType.Properties.Builder.create()),
        STRIPPED_DARK_OAK_WOOD(BlockType.Properties.Builder.create()),
        OAK_LEAVES(BlockType.Properties.Builder.create()),
        SPRUCE_LEAVES(BlockType.Properties.Builder.create()),
        BIRCH_LEAVES(BlockType.Properties.Builder.create()),
        JUNGLE_LEAVES(BlockType.Properties.Builder.create()),
        ACACIA_LEAVES(BlockType.Properties.Builder.create()),
        DARK_OAK_LEAVES(BlockType.Properties.Builder.create()),
        SPONGE(BlockType.Properties.Builder.create()),
        WET_SPONGE(BlockType.Properties.Builder.create()),
        GLASS(BlockType.Properties.Builder.create()),
        LAPIS_ORE(BlockType.Properties.Builder.create()),
        LAPIS_BLOCK(BlockType.Properties.Builder.create()),
        DISPENSER(BlockType.Properties.Builder.create()),
        SANDSTONE(BlockType.Properties.Builder.create()),
        CHISELED_SANDSTONE(BlockType.Properties.Builder.create()),
        CUT_SANDSTONE(BlockType.Properties.Builder.create()),
        NOTE_BLOCK(BlockType.Properties.Builder.create()),
        WHITE_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        ORANGE_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        MAGENTA_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIGHT_BLUE_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        YELLOW_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIME_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        PINK_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        GRAY_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIGHT_GRAY_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CYAN_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        PURPLE_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BLUE_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BROWN_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        GREEN_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        RED_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BLACK_BED(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        POWERED_RAIL(BlockType.Properties.Builder.create()),
        DETECTOR_RAIL(BlockType.Properties.Builder.create()),
        STICKY_PISTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL, BlockType.RotationAxis.VERTICAL})),
        COBWEB(BlockType.Properties.Builder.create()),
        GRASS(BlockType.Properties.Builder.create()),
        FERN(BlockType.Properties.Builder.create()),
        DEAD_BUSH(BlockType.Properties.Builder.create()),
        SEAGRASS(BlockType.Properties.Builder.create()),
        TALL_SEAGRASS(BlockType.Properties.Builder.create()),
        PISTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL, BlockType.RotationAxis.VERTICAL})),
        PISTON_HEAD(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL, BlockType.RotationAxis.VERTICAL})),
        WHITE_WOOL(BlockType.Properties.Builder.create()),
        ORANGE_WOOL(BlockType.Properties.Builder.create()),
        MAGENTA_WOOL(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_WOOL(BlockType.Properties.Builder.create()),
        YELLOW_WOOL(BlockType.Properties.Builder.create()),
        LIME_WOOL(BlockType.Properties.Builder.create()),
        PINK_WOOL(BlockType.Properties.Builder.create()),
        GRAY_WOOL(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_WOOL(BlockType.Properties.Builder.create()),
        CYAN_WOOL(BlockType.Properties.Builder.create()),
        PURPLE_WOOL(BlockType.Properties.Builder.create()),
        BLUE_WOOL(BlockType.Properties.Builder.create()),
        BROWN_WOOL(BlockType.Properties.Builder.create()),
        GREEN_WOOL(BlockType.Properties.Builder.create()),
        RED_WOOL(BlockType.Properties.Builder.create()),
        BLACK_WOOL(BlockType.Properties.Builder.create()),
        MOVING_PISTON(BlockType.Properties.Builder.create()),
        DANDELION(BlockType.Properties.Builder.create()),
        POPPY(BlockType.Properties.Builder.create()),
        BLUE_ORCHID(BlockType.Properties.Builder.create()),
        ALLIUM(BlockType.Properties.Builder.create()),
        AZURE_BLUET(BlockType.Properties.Builder.create()),
        RED_TULIP(BlockType.Properties.Builder.create()),
        ORANGE_TULIP(BlockType.Properties.Builder.create()),
        WHITE_TULIP(BlockType.Properties.Builder.create()),
        PINK_TULIP(BlockType.Properties.Builder.create()),
        OXEYE_DAISY(BlockType.Properties.Builder.create()),
        CORNFLOWER(BlockType.Properties.Builder.create()),
        WITHER_ROSE(BlockType.Properties.Builder.create()),
        LILY_OF_THE_VALLEY(BlockType.Properties.Builder.create()),
        BROWN_MUSHROOM(BlockType.Properties.Builder.create()),
        RED_MUSHROOM(BlockType.Properties.Builder.create()),
        GOLD_BLOCK(BlockType.Properties.Builder.create()),
        IRON_BLOCK(BlockType.Properties.Builder.create()),
        BRICKS(BlockType.Properties.Builder.create()),
        TNT(BlockType.Properties.Builder.create()),
        BOOKSHELF(BlockType.Properties.Builder.create()),
        MOSSY_COBBLESTONE(BlockType.Properties.Builder.create()),
        OBSIDIAN(BlockType.Properties.Builder.create()),
        TORCH(BlockType.Properties.Builder.create()),
        WALL_TORCH(BlockType.Properties.Builder.create()),
        FIRE(BlockType.Properties.Builder.create()),
        SOUL_FIRE(BlockType.Properties.Builder.create()),
        SPAWNER(BlockType.Properties.Builder.create()),
        OAK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        CHEST(BlockType.Properties.Builder.create().waterloggable(true)),
        REDSTONE_WIRE(BlockType.Properties.Builder.create()),
        DIAMOND_ORE(BlockType.Properties.Builder.create()),
        DIAMOND_BLOCK(BlockType.Properties.Builder.create()),
        CRAFTING_TABLE(BlockType.Properties.Builder.create()),
        WHEAT(BlockType.Properties.Builder.create()),
        FARMLAND(BlockType.Properties.Builder.create()),
        FURNACE(BlockType.Properties.Builder.create()),
        OAK_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        SPRUCE_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        BIRCH_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        ACACIA_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        JUNGLE_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_OAK_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        OAK_DOOR(BlockType.Properties.Builder.create()),
        LADDER(BlockType.Properties.Builder.create().waterloggable(true)),
        RAIL(BlockType.Properties.Builder.create()),
        COBBLESTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        OAK_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        SPRUCE_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        BIRCH_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        ACACIA_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        JUNGLE_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_OAK_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        LEVER(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        STONE_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        IRON_DOOR(BlockType.Properties.Builder.create()),
        OAK_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        SPRUCE_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        BIRCH_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        JUNGLE_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        ACACIA_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        DARK_OAK_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        REDSTONE_ORE(BlockType.Properties.Builder.create()),
        REDSTONE_TORCH(BlockType.Properties.Builder.create()),
        REDSTONE_WALL_TORCH(BlockType.Properties.Builder.create()),
        STONE_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SNOW(BlockType.Properties.Builder.create()),
        ICE(BlockType.Properties.Builder.create()),
        SNOW_BLOCK(BlockType.Properties.Builder.create()),
        CACTUS(BlockType.Properties.Builder.create()),
        CLAY(BlockType.Properties.Builder.create()),
        SUGAR_CANE(BlockType.Properties.Builder.create()),
        JUKEBOX(BlockType.Properties.Builder.create()),
        OAK_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        PUMPKIN(BlockType.Properties.Builder.create()),
        NETHERRACK(BlockType.Properties.Builder.create()),
        SOUL_SAND(BlockType.Properties.Builder.create()),
        SOUL_SOIL(BlockType.Properties.Builder.create()),
        BASALT(BlockType.Properties.Builder.create()),
        POLISHED_BASALT(BlockType.Properties.Builder.create()),
        SOUL_TORCH(BlockType.Properties.Builder.create()),
        SOUL_WALL_TORCH(BlockType.Properties.Builder.create()),
        GLOWSTONE(BlockType.Properties.Builder.create()),
        NETHER_PORTAL(BlockType.Properties.Builder.create()),
        CARVED_PUMPKIN(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        JACK_O_LANTERN(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CAKE(BlockType.Properties.Builder.create()),
        REPEATER(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        WHITE_STAINED_GLASS(BlockType.Properties.Builder.create()),
        ORANGE_STAINED_GLASS(BlockType.Properties.Builder.create()),
        MAGENTA_STAINED_GLASS(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_STAINED_GLASS(BlockType.Properties.Builder.create()),
        YELLOW_STAINED_GLASS(BlockType.Properties.Builder.create()),
        LIME_STAINED_GLASS(BlockType.Properties.Builder.create()),
        PINK_STAINED_GLASS(BlockType.Properties.Builder.create()),
        GRAY_STAINED_GLASS(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_STAINED_GLASS(BlockType.Properties.Builder.create()),
        CYAN_STAINED_GLASS(BlockType.Properties.Builder.create()),
        PURPLE_STAINED_GLASS(BlockType.Properties.Builder.create()),
        BLUE_STAINED_GLASS(BlockType.Properties.Builder.create()),
        BROWN_STAINED_GLASS(BlockType.Properties.Builder.create()),
        GREEN_STAINED_GLASS(BlockType.Properties.Builder.create()),
        RED_STAINED_GLASS(BlockType.Properties.Builder.create()),
        BLACK_STAINED_GLASS(BlockType.Properties.Builder.create()),
        OAK_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SPRUCE_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BIRCH_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        JUNGLE_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        ACACIA_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        DARK_OAK_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        STONE_BRICKS(BlockType.Properties.Builder.create()),
        MOSSY_STONE_BRICKS(BlockType.Properties.Builder.create()),
        CRACKED_STONE_BRICKS(BlockType.Properties.Builder.create()),
        CHISELED_STONE_BRICKS(BlockType.Properties.Builder.create()),
        INFESTED_STONE(BlockType.Properties.Builder.create()),
        INFESTED_COBBLESTONE(BlockType.Properties.Builder.create()),
        INFESTED_STONE_BRICKS(BlockType.Properties.Builder.create()),
        INFESTED_MOSSY_STONE_BRICKS(BlockType.Properties.Builder.create()),
        INFESTED_CRACKED_STONE_BRICKS(BlockType.Properties.Builder.create()),
        INFESTED_CHISELED_STONE_BRICKS(BlockType.Properties.Builder.create()),
        BROWN_MUSHROOM_BLOCK(BlockType.Properties.Builder.create()),
        RED_MUSHROOM_BLOCK(BlockType.Properties.Builder.create()),
        MUSHROOM_STEM(BlockType.Properties.Builder.create()),
        IRON_BARS(BlockType.Properties.Builder.create().waterloggable(true)),
        CHAIN(BlockType.Properties.Builder.create().waterloggable(true)),
        GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        MELON(BlockType.Properties.Builder.create()),
        ATTACHED_PUMPKIN_STEM(BlockType.Properties.Builder.create()),
        ATTACHED_MELON_STEM(BlockType.Properties.Builder.create()),
        PUMPKIN_STEM(BlockType.Properties.Builder.create()),
        MELON_STEM(BlockType.Properties.Builder.create()),
        VINE(BlockType.Properties.Builder.create()),
        OAK_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        STONE_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        MYCELIUM(BlockType.Properties.Builder.create()),
        LILY_PAD(BlockType.Properties.Builder.create()),
        NETHER_BRICKS(BlockType.Properties.Builder.create()),
        NETHER_BRICK_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        NETHER_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        NETHER_WART(BlockType.Properties.Builder.create()),
        ENCHANTING_TABLE(BlockType.Properties.Builder.create()),
        BREWING_STAND(BlockType.Properties.Builder.create()),
        CAULDRON(BlockType.Properties.Builder.create()),
        END_PORTAL(BlockType.Properties.Builder.create()),
        END_PORTAL_FRAME(BlockType.Properties.Builder.create()),
        END_STONE(BlockType.Properties.Builder.create()),
        DRAGON_EGG(BlockType.Properties.Builder.create()),
        REDSTONE_LAMP(BlockType.Properties.Builder.create()),
        COCOA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SANDSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        EMERALD_ORE(BlockType.Properties.Builder.create()),
        ENDER_CHEST(BlockType.Properties.Builder.create().waterloggable(true)),
        TRIPWIRE_HOOK(BlockType.Properties.Builder.create()),
        TRIPWIRE(BlockType.Properties.Builder.create()),
        EMERALD_BLOCK(BlockType.Properties.Builder.create()),
        SPRUCE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        BIRCH_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        JUNGLE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        COMMAND_BLOCK(BlockType.Properties.Builder.create()),
        BEACON(BlockType.Properties.Builder.create()),
        COBBLESTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_COBBLESTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        FLOWER_POT(BlockType.Properties.Builder.create()),
        POTTED_OAK_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_SPRUCE_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_BIRCH_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_JUNGLE_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_ACACIA_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_DARK_OAK_SAPLING(BlockType.Properties.Builder.create()),
        POTTED_FERN(BlockType.Properties.Builder.create()),
        POTTED_DANDELION(BlockType.Properties.Builder.create()),
        POTTED_POPPY(BlockType.Properties.Builder.create()),
        POTTED_BLUE_ORCHID(BlockType.Properties.Builder.create()),
        POTTED_ALLIUM(BlockType.Properties.Builder.create()),
        POTTED_AZURE_BLUET(BlockType.Properties.Builder.create()),
        POTTED_RED_TULIP(BlockType.Properties.Builder.create()),
        POTTED_ORANGE_TULIP(BlockType.Properties.Builder.create()),
        POTTED_WHITE_TULIP(BlockType.Properties.Builder.create()),
        POTTED_PINK_TULIP(BlockType.Properties.Builder.create()),
        POTTED_OXEYE_DAISY(BlockType.Properties.Builder.create()),
        POTTED_CORNFLOWER(BlockType.Properties.Builder.create()),
        POTTED_LILY_OF_THE_VALLEY(BlockType.Properties.Builder.create()),
        POTTED_WITHER_ROSE(BlockType.Properties.Builder.create()),
        POTTED_RED_MUSHROOM(BlockType.Properties.Builder.create()),
        POTTED_BROWN_MUSHROOM(BlockType.Properties.Builder.create()),
        POTTED_DEAD_BUSH(BlockType.Properties.Builder.create()),
        POTTED_CACTUS(BlockType.Properties.Builder.create()),
        CARROTS(BlockType.Properties.Builder.create()),
        POTATOES(BlockType.Properties.Builder.create()),
        OAK_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SPRUCE_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BIRCH_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        JUNGLE_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        ACACIA_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        DARK_OAK_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SKELETON_SKULL(BlockType.Properties.Builder.create()),
        SKELETON_WALL_SKULL(BlockType.Properties.Builder.create()),
        WITHER_SKELETON_SKULL(BlockType.Properties.Builder.create()),
        WITHER_SKELETON_WALL_SKULL(BlockType.Properties.Builder.create()),
        ZOMBIE_HEAD(BlockType.Properties.Builder.create()),
        ZOMBIE_WALL_HEAD(BlockType.Properties.Builder.create()),
        PLAYER_HEAD(BlockType.Properties.Builder.create()),
        PLAYER_WALL_HEAD(BlockType.Properties.Builder.create()),
        CREEPER_HEAD(BlockType.Properties.Builder.create()),
        CREEPER_WALL_HEAD(BlockType.Properties.Builder.create()),
        DRAGON_HEAD(BlockType.Properties.Builder.create()),
        DRAGON_WALL_HEAD(BlockType.Properties.Builder.create()),
        ANVIL(BlockType.Properties.Builder.create()),
        CHIPPED_ANVIL(BlockType.Properties.Builder.create()),
        DAMAGED_ANVIL(BlockType.Properties.Builder.create()),
        TRAPPED_CHEST(BlockType.Properties.Builder.create().waterloggable(true)),
        LIGHT_WEIGHTED_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        HEAVY_WEIGHTED_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        COMPARATOR(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        DAYLIGHT_DETECTOR(BlockType.Properties.Builder.create()),
        REDSTONE_BLOCK(BlockType.Properties.Builder.create()),
        NETHER_QUARTZ_ORE(BlockType.Properties.Builder.create()),
        HOPPER(BlockType.Properties.Builder.create()),
        QUARTZ_BLOCK(BlockType.Properties.Builder.create()),
        CHISELED_QUARTZ_BLOCK(BlockType.Properties.Builder.create()),
        QUARTZ_PILLAR(BlockType.Properties.Builder.create()),
        QUARTZ_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        ACTIVATOR_RAIL(BlockType.Properties.Builder.create()),
        DROPPER(BlockType.Properties.Builder.create()),
        WHITE_TERRACOTTA(BlockType.Properties.Builder.create()),
        ORANGE_TERRACOTTA(BlockType.Properties.Builder.create()),
        MAGENTA_TERRACOTTA(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_TERRACOTTA(BlockType.Properties.Builder.create()),
        YELLOW_TERRACOTTA(BlockType.Properties.Builder.create()),
        LIME_TERRACOTTA(BlockType.Properties.Builder.create()),
        PINK_TERRACOTTA(BlockType.Properties.Builder.create()),
        GRAY_TERRACOTTA(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_TERRACOTTA(BlockType.Properties.Builder.create()),
        CYAN_TERRACOTTA(BlockType.Properties.Builder.create()),
        PURPLE_TERRACOTTA(BlockType.Properties.Builder.create()),
        BLUE_TERRACOTTA(BlockType.Properties.Builder.create()),
        BROWN_TERRACOTTA(BlockType.Properties.Builder.create()),
        GREEN_TERRACOTTA(BlockType.Properties.Builder.create()),
        RED_TERRACOTTA(BlockType.Properties.Builder.create()),
        BLACK_TERRACOTTA(BlockType.Properties.Builder.create()),
        WHITE_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        ORANGE_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        MAGENTA_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        LIGHT_BLUE_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        YELLOW_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        LIME_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        PINK_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        GRAY_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        LIGHT_GRAY_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        CYAN_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        PURPLE_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        BLUE_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        BROWN_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        GREEN_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        BLACK_STAINED_GLASS_PANE(BlockType.Properties.Builder.create().waterloggable(true)),
        ACACIA_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_OAK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        SLIME_BLOCK(BlockType.Properties.Builder.create()),
        BARRIER(BlockType.Properties.Builder.create()),
        IRON_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        PRISMARINE(BlockType.Properties.Builder.create()),
        PRISMARINE_BRICKS(BlockType.Properties.Builder.create()),
        DARK_PRISMARINE(BlockType.Properties.Builder.create()),
        PRISMARINE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        PRISMARINE_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_PRISMARINE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        PRISMARINE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        PRISMARINE_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_PRISMARINE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SEA_LANTERN(BlockType.Properties.Builder.create()),
        HAY_BLOCK(BlockType.Properties.Builder.create()),
        WHITE_CARPET(BlockType.Properties.Builder.create()),
        ORANGE_CARPET(BlockType.Properties.Builder.create()),
        MAGENTA_CARPET(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_CARPET(BlockType.Properties.Builder.create()),
        YELLOW_CARPET(BlockType.Properties.Builder.create()),
        LIME_CARPET(BlockType.Properties.Builder.create()),
        PINK_CARPET(BlockType.Properties.Builder.create()),
        GRAY_CARPET(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_CARPET(BlockType.Properties.Builder.create()),
        CYAN_CARPET(BlockType.Properties.Builder.create()),
        PURPLE_CARPET(BlockType.Properties.Builder.create()),
        BLUE_CARPET(BlockType.Properties.Builder.create()),
        BROWN_CARPET(BlockType.Properties.Builder.create()),
        GREEN_CARPET(BlockType.Properties.Builder.create()),
        RED_CARPET(BlockType.Properties.Builder.create()),
        BLACK_CARPET(BlockType.Properties.Builder.create()),
        TERRACOTTA(BlockType.Properties.Builder.create()),
        COAL_BLOCK(BlockType.Properties.Builder.create()),
        PACKED_ICE(BlockType.Properties.Builder.create()),
        SUNFLOWER(BlockType.Properties.Builder.create()),
        LILAC(BlockType.Properties.Builder.create()),
        ROSE_BUSH(BlockType.Properties.Builder.create()),
        PEONY(BlockType.Properties.Builder.create()),
        TALL_GRASS(BlockType.Properties.Builder.create()),
        LARGE_FERN(BlockType.Properties.Builder.create()),
        WHITE_BANNER(BlockType.Properties.Builder.create()),
        ORANGE_BANNER(BlockType.Properties.Builder.create()),
        MAGENTA_BANNER(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_BANNER(BlockType.Properties.Builder.create()),
        YELLOW_BANNER(BlockType.Properties.Builder.create()),
        LIME_BANNER(BlockType.Properties.Builder.create()),
        PINK_BANNER(BlockType.Properties.Builder.create()),
        GRAY_BANNER(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_BANNER(BlockType.Properties.Builder.create()),
        CYAN_BANNER(BlockType.Properties.Builder.create()),
        PURPLE_BANNER(BlockType.Properties.Builder.create()),
        BLUE_BANNER(BlockType.Properties.Builder.create()),
        BROWN_BANNER(BlockType.Properties.Builder.create()),
        GREEN_BANNER(BlockType.Properties.Builder.create()),
        RED_BANNER(BlockType.Properties.Builder.create()),
        BLACK_BANNER(BlockType.Properties.Builder.create()),
        WHITE_WALL_BANNER(BlockType.Properties.Builder.create()),
        ORANGE_WALL_BANNER(BlockType.Properties.Builder.create()),
        MAGENTA_WALL_BANNER(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_WALL_BANNER(BlockType.Properties.Builder.create()),
        YELLOW_WALL_BANNER(BlockType.Properties.Builder.create()),
        LIME_WALL_BANNER(BlockType.Properties.Builder.create()),
        PINK_WALL_BANNER(BlockType.Properties.Builder.create()),
        GRAY_WALL_BANNER(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_WALL_BANNER(BlockType.Properties.Builder.create()),
        CYAN_WALL_BANNER(BlockType.Properties.Builder.create()),
        PURPLE_WALL_BANNER(BlockType.Properties.Builder.create()),
        BLUE_WALL_BANNER(BlockType.Properties.Builder.create()),
        BROWN_WALL_BANNER(BlockType.Properties.Builder.create()),
        GREEN_WALL_BANNER(BlockType.Properties.Builder.create()),
        RED_WALL_BANNER(BlockType.Properties.Builder.create()),
        BLACK_WALL_BANNER(BlockType.Properties.Builder.create()),
        RED_SANDSTONE(BlockType.Properties.Builder.create()),
        CHISELED_RED_SANDSTONE(BlockType.Properties.Builder.create()),
        CUT_RED_SANDSTONE(BlockType.Properties.Builder.create()),
        RED_SANDSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        OAK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SPRUCE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        BIRCH_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        JUNGLE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        ACACIA_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_OAK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        STONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_STONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        CUT_SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        PETRIFIED_OAK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        COBBLESTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        STONE_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        NETHER_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        QUARTZ_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        CUT_RED_SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        PURPUR_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_STONE(BlockType.Properties.Builder.create()),
        SMOOTH_SANDSTONE(BlockType.Properties.Builder.create()),
        SMOOTH_QUARTZ(BlockType.Properties.Builder.create()),
        SMOOTH_RED_SANDSTONE(BlockType.Properties.Builder.create()),
        SPRUCE_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BIRCH_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        JUNGLE_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        ACACIA_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        DARK_OAK_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        SPRUCE_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        BIRCH_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        JUNGLE_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        ACACIA_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        DARK_OAK_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        SPRUCE_DOOR(BlockType.Properties.Builder.create()),
        BIRCH_DOOR(BlockType.Properties.Builder.create()),
        JUNGLE_DOOR(BlockType.Properties.Builder.create()),
        ACACIA_DOOR(BlockType.Properties.Builder.create()),
        DARK_OAK_DOOR(BlockType.Properties.Builder.create()),
        END_ROD(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL, BlockType.RotationAxis.VERTICAL})),
        CHORUS_PLANT(BlockType.Properties.Builder.create()),
        CHORUS_FLOWER(BlockType.Properties.Builder.create()),
        PURPUR_BLOCK(BlockType.Properties.Builder.create()),
        PURPUR_PILLAR(BlockType.Properties.Builder.create()),
        PURPUR_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        END_STONE_BRICKS(BlockType.Properties.Builder.create()),
        BEETROOTS(BlockType.Properties.Builder.create()),
        GRASS_PATH(BlockType.Properties.Builder.create()),
        END_GATEWAY(BlockType.Properties.Builder.create()),
        REPEATING_COMMAND_BLOCK(BlockType.Properties.Builder.create()),
        CHAIN_COMMAND_BLOCK(BlockType.Properties.Builder.create()),
        FROSTED_ICE(BlockType.Properties.Builder.create()),
        MAGMA_BLOCK(BlockType.Properties.Builder.create()),
        NETHER_WART_BLOCK(BlockType.Properties.Builder.create()),
        RED_NETHER_BRICKS(BlockType.Properties.Builder.create()),
        BONE_BLOCK(BlockType.Properties.Builder.create()),
        STRUCTURE_VOID(BlockType.Properties.Builder.create()),
        OBSERVER(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL, BlockType.RotationAxis.VERTICAL})),
        SHULKER_BOX(BlockType.Properties.Builder.create()),
        WHITE_SHULKER_BOX(BlockType.Properties.Builder.create()),
        ORANGE_SHULKER_BOX(BlockType.Properties.Builder.create()),
        MAGENTA_SHULKER_BOX(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_SHULKER_BOX(BlockType.Properties.Builder.create()),
        YELLOW_SHULKER_BOX(BlockType.Properties.Builder.create()),
        LIME_SHULKER_BOX(BlockType.Properties.Builder.create()),
        PINK_SHULKER_BOX(BlockType.Properties.Builder.create()),
        GRAY_SHULKER_BOX(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_SHULKER_BOX(BlockType.Properties.Builder.create()),
        CYAN_SHULKER_BOX(BlockType.Properties.Builder.create()),
        PURPLE_SHULKER_BOX(BlockType.Properties.Builder.create()),
        BLUE_SHULKER_BOX(BlockType.Properties.Builder.create()),
        BROWN_SHULKER_BOX(BlockType.Properties.Builder.create()),
        GREEN_SHULKER_BOX(BlockType.Properties.Builder.create()),
        RED_SHULKER_BOX(BlockType.Properties.Builder.create()),
        BLACK_SHULKER_BOX(BlockType.Properties.Builder.create()),
        WHITE_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        ORANGE_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        MAGENTA_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIGHT_BLUE_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        YELLOW_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIME_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        PINK_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        GRAY_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LIGHT_GRAY_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CYAN_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        PURPLE_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BLUE_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BROWN_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        GREEN_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        RED_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BLACK_GLAZED_TERRACOTTA(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        WHITE_CONCRETE(BlockType.Properties.Builder.create()),
        ORANGE_CONCRETE(BlockType.Properties.Builder.create()),
        MAGENTA_CONCRETE(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_CONCRETE(BlockType.Properties.Builder.create()),
        YELLOW_CONCRETE(BlockType.Properties.Builder.create()),
        LIME_CONCRETE(BlockType.Properties.Builder.create()),
        PINK_CONCRETE(BlockType.Properties.Builder.create()),
        GRAY_CONCRETE(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_CONCRETE(BlockType.Properties.Builder.create()),
        CYAN_CONCRETE(BlockType.Properties.Builder.create()),
        PURPLE_CONCRETE(BlockType.Properties.Builder.create()),
        BLUE_CONCRETE(BlockType.Properties.Builder.create()),
        BROWN_CONCRETE(BlockType.Properties.Builder.create()),
        GREEN_CONCRETE(BlockType.Properties.Builder.create()),
        RED_CONCRETE(BlockType.Properties.Builder.create()),
        BLACK_CONCRETE(BlockType.Properties.Builder.create()),
        WHITE_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        ORANGE_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        MAGENTA_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        LIGHT_BLUE_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        YELLOW_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        LIME_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        PINK_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        GRAY_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        LIGHT_GRAY_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        CYAN_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        PURPLE_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        BLUE_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        BROWN_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        GREEN_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        RED_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        BLACK_CONCRETE_POWDER(BlockType.Properties.Builder.create()),
        KELP(BlockType.Properties.Builder.create()),
        KELP_PLANT(BlockType.Properties.Builder.create()),
        DRIED_KELP_BLOCK(BlockType.Properties.Builder.create()),
        TURTLE_EGG(BlockType.Properties.Builder.create()),
        DEAD_TUBE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        DEAD_BRAIN_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        DEAD_BUBBLE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        DEAD_FIRE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        DEAD_HORN_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        TUBE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        BRAIN_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        BUBBLE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        FIRE_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        HORN_CORAL_BLOCK(BlockType.Properties.Builder.create()),
        DEAD_TUBE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BRAIN_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BUBBLE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_FIRE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_HORN_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        TUBE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        BRAIN_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        BUBBLE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        FIRE_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        HORN_CORAL(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_TUBE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BRAIN_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BUBBLE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_FIRE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_HORN_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        TUBE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        BRAIN_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        BUBBLE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        FIRE_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        HORN_CORAL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_TUBE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BRAIN_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_BUBBLE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_FIRE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        DEAD_HORN_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        TUBE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        BRAIN_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        BUBBLE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        FIRE_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        HORN_CORAL_WALL_FAN(BlockType.Properties.Builder.create().waterloggable(true)),
        SEA_PICKLE(BlockType.Properties.Builder.create().waterloggable(true)),
        BLUE_ICE(BlockType.Properties.Builder.create()),
        CONDUIT(BlockType.Properties.Builder.create().waterloggable(true)),
        BAMBOO_SAPLING(BlockType.Properties.Builder.create()),
        BAMBOO(BlockType.Properties.Builder.create()),
        POTTED_BAMBOO(BlockType.Properties.Builder.create()),
        VOID_AIR(BlockType.Properties.Builder.create()),
        CAVE_AIR(BlockType.Properties.Builder.create()),
        BUBBLE_COLUMN(BlockType.Properties.Builder.create()),
        POLISHED_GRANITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_RED_SANDSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_STONE_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_DIORITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_COBBLESTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        END_STONE_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        STONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_SANDSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_QUARTZ_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        GRANITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        ANDESITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_NETHER_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_ANDESITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        DIORITE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_GRANITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_RED_SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_STONE_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_DIORITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_COBBLESTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        END_STONE_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_SANDSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        SMOOTH_QUARTZ_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        GRANITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        ANDESITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_NETHER_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_ANDESITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        DIORITE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        PRISMARINE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_SANDSTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        MOSSY_STONE_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        GRANITE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        STONE_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        NETHER_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        ANDESITE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        RED_NETHER_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        SANDSTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        END_STONE_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        DIORITE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        SCAFFOLDING(BlockType.Properties.Builder.create().waterloggable(true)),
        LOOM(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        BARREL(BlockType.Properties.Builder.create()),
        SMOKER(BlockType.Properties.Builder.create()),
        BLAST_FURNACE(BlockType.Properties.Builder.create()),
        CARTOGRAPHY_TABLE(BlockType.Properties.Builder.create()),
        FLETCHING_TABLE(BlockType.Properties.Builder.create()),
        GRINDSTONE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        LECTERN(BlockType.Properties.Builder.create()),
        SMITHING_TABLE(BlockType.Properties.Builder.create()),
        STONECUTTER(BlockType.Properties.Builder.create()),
        BELL(BlockType.Properties.Builder.create()),
        LANTERN(BlockType.Properties.Builder.create().waterloggable(true)),
        SOUL_LANTERN(BlockType.Properties.Builder.create().waterloggable(true)),
        CAMPFIRE(BlockType.Properties.Builder.create().waterloggable(true)),
        SOUL_CAMPFIRE(BlockType.Properties.Builder.create().waterloggable(true)),
        SWEET_BERRY_BUSH(BlockType.Properties.Builder.create()),
        WARPED_STEM(BlockType.Properties.Builder.create()),
        STRIPPED_WARPED_STEM(BlockType.Properties.Builder.create()),
        WARPED_HYPHAE(BlockType.Properties.Builder.create()),
        STRIPPED_WARPED_HYPHAE(BlockType.Properties.Builder.create()),
        WARPED_NYLIUM(BlockType.Properties.Builder.create()),
        WARPED_FUNGUS(BlockType.Properties.Builder.create()),
        WARPED_WART_BLOCK(BlockType.Properties.Builder.create()),
        WARPED_ROOTS(BlockType.Properties.Builder.create()),
        NETHER_SPROUTS(BlockType.Properties.Builder.create()),
        CRIMSON_STEM(BlockType.Properties.Builder.create()),
        STRIPPED_CRIMSON_STEM(BlockType.Properties.Builder.create()),
        CRIMSON_HYPHAE(BlockType.Properties.Builder.create()),
        STRIPPED_CRIMSON_HYPHAE(BlockType.Properties.Builder.create()),
        CRIMSON_NYLIUM(BlockType.Properties.Builder.create()),
        CRIMSON_FUNGUS(BlockType.Properties.Builder.create()),
        SHROOMLIGHT(BlockType.Properties.Builder.create()),
        WEEPING_VINES(BlockType.Properties.Builder.create()),
        WEEPING_VINES_PLANT(BlockType.Properties.Builder.create()),
        TWISTING_VINES(BlockType.Properties.Builder.create()),
        TWISTING_VINES_PLANT(BlockType.Properties.Builder.create()),
        CRIMSON_ROOTS(BlockType.Properties.Builder.create()),
        CRIMSON_PLANKS(BlockType.Properties.Builder.create()),
        WARPED_PLANKS(BlockType.Properties.Builder.create()),
        CRIMSON_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        WARPED_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        CRIMSON_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        WARPED_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        CRIMSON_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        WARPED_FENCE(BlockType.Properties.Builder.create().waterloggable(true)),
        CRIMSON_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        WARPED_TRAPDOOR(BlockType.Properties.Builder.create().waterloggable(true).rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CRIMSON_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        WARPED_FENCE_GATE(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CRIMSON_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        WARPED_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        CRIMSON_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        WARPED_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        CRIMSON_DOOR(BlockType.Properties.Builder.create()),
        WARPED_DOOR(BlockType.Properties.Builder.create()),
        CRIMSON_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        WARPED_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        CRIMSON_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        WARPED_WALL_SIGN(BlockType.Properties.Builder.create().waterloggable(true)),
        STRUCTURE_BLOCK(BlockType.Properties.Builder.create()),
        JIGSAW(BlockType.Properties.Builder.create()),
        COMPOSTER(BlockType.Properties.Builder.create()),
        TARGET(BlockType.Properties.Builder.create()),
        BEE_NEST(BlockType.Properties.Builder.create()),
        BEEHIVE(BlockType.Properties.Builder.create()),
        HONEY_BLOCK(BlockType.Properties.Builder.create()),
        HONEYCOMB_BLOCK(BlockType.Properties.Builder.create()),
        NETHERITE_BLOCK(BlockType.Properties.Builder.create()),
        ANCIENT_DEBRIS(BlockType.Properties.Builder.create()),
        CRYING_OBSIDIAN(BlockType.Properties.Builder.create()),
        RESPAWN_ANCHOR(BlockType.Properties.Builder.create()),
        POTTED_CRIMSON_FUNGUS(BlockType.Properties.Builder.create()),
        POTTED_WARPED_FUNGUS(BlockType.Properties.Builder.create()),
        POTTED_CRIMSON_ROOTS(BlockType.Properties.Builder.create()),
        POTTED_WARPED_ROOTS(BlockType.Properties.Builder.create()),
        LODESTONE(BlockType.Properties.Builder.create()),
        BLACKSTONE(BlockType.Properties.Builder.create()),
        BLACKSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        BLACKSTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        BLACKSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_BLACKSTONE(BlockType.Properties.Builder.create()),
        POLISHED_BLACKSTONE_BRICKS(BlockType.Properties.Builder.create()),
        CRACKED_POLISHED_BLACKSTONE_BRICKS(BlockType.Properties.Builder.create()),
        CHISELED_POLISHED_BLACKSTONE(BlockType.Properties.Builder.create()),
        POLISHED_BLACKSTONE_BRICK_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_BLACKSTONE_BRICK_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_BLACKSTONE_BRICK_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        GILDED_BLACKSTONE(BlockType.Properties.Builder.create()),
        POLISHED_BLACKSTONE_STAIRS(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_BLACKSTONE_SLAB(BlockType.Properties.Builder.create().waterloggable(true)),
        POLISHED_BLACKSTONE_PRESSURE_PLATE(BlockType.Properties.Builder.create()),
        POLISHED_BLACKSTONE_BUTTON(BlockType.Properties.Builder.create().rotatable(true).possibleRotations(new BlockType.RotationAxis[]{BlockType.RotationAxis.HORIZONTAL})),
        POLISHED_BLACKSTONE_WALL(BlockType.Properties.Builder.create().waterloggable(true)),
        CHISELED_NETHER_BRICKS(BlockType.Properties.Builder.create()),
        CRACKED_NETHER_BRICKS(BlockType.Properties.Builder.create()),
        QUARTZ_BRICKS(BlockType.Properties.Builder.create());

        private final BlockType.Properties properties;

        Block(BlockType.Properties.Builder properties) {
            this.properties = properties.build();
        }

        @Override
        public BlockType.Properties getProperties() {
            return properties;
        }
    }

    public enum Effect implements StatusEffect {
        SWIFTNESS(StatusEffect.Type.BENEFICIAL),
        SLOWNESS(StatusEffect.Type.HARMFUL),
        HASTE(StatusEffect.Type.BENEFICIAL),
        MINING_FATIGUE(StatusEffect.Type.HARMFUL),
        STRENGTH(StatusEffect.Type.BENEFICIAL),
        WEAKNESS(StatusEffect.Type.HARMFUL),
        INSTANT_HEALTH(StatusEffect.Type.BENEFICIAL),
        INSTANT_DAMAGE(StatusEffect.Type.HARMFUL),
        JUMP_BOOST(StatusEffect.Type.BENEFICIAL),
        NAUSEA(StatusEffect.Type.HARMFUL),
        REGENERATION(StatusEffect.Type.BENEFICIAL),
        POISON(StatusEffect.Type.HARMFUL),
        RESISTANCE(StatusEffect.Type.BENEFICIAL),
        FIRE_RESISTANCE(StatusEffect.Type.BENEFICIAL),
        WATER_BREATHING(StatusEffect.Type.BENEFICIAL),
        INVISIBILITY(StatusEffect.Type.BENEFICIAL),
        BLINDNESS(StatusEffect.Type.HARMFUL),
        NIGHT_VISION(StatusEffect.Type.BENEFICIAL),
        SATURATION(StatusEffect.Type.BENEFICIAL),
        HUNGER(StatusEffect.Type.HARMFUL),
        WITHER(StatusEffect.Type.HARMFUL),
        HEALTH_BOOST(StatusEffect.Type.BENEFICIAL),
        ABSORPTION(StatusEffect.Type.BENEFICIAL),
        GLOWING(StatusEffect.Type.NEUTRAL),
        LEVITATION(StatusEffect.Type.HARMFUL),
        LUCK(StatusEffect.Type.BENEFICIAL),
        UNLUCK(StatusEffect.Type.HARMFUL),
        SLOW_FALLING(StatusEffect.Type.BENEFICIAL),
        CONDUIT_POWER(StatusEffect.Type.BENEFICIAL),
        DOLPHINS_GRACE(StatusEffect.Type.BENEFICIAL),
        BAD_OMEN(StatusEffect.Type.NEUTRAL),
        HERO_OF_THE_VILLAGE(StatusEffect.Type.BENEFICIAL);

        private final StatusEffect.Type type;

        Effect(StatusEffect.Type type) {
            this.type = type;
        }

        @Override
        public Type getType() {
            return type;
        }
    }

    public enum Item implements com.combatreforged.factory.api.world.item.ItemType {
        AIR(64, 0),
        STONE(Minecraft.Block.STONE, 64, 0),
        GRANITE(Minecraft.Block.GRANITE, 64, 0),
        POLISHED_GRANITE(Minecraft.Block.POLISHED_GRANITE, 64, 0),
        DIORITE(Minecraft.Block.DIORITE, 64, 0),
        POLISHED_DIORITE(Minecraft.Block.POLISHED_DIORITE, 64, 0),
        ANDESITE(Minecraft.Block.ANDESITE, 64, 0),
        POLISHED_ANDESITE(Minecraft.Block.POLISHED_ANDESITE, 64, 0),
        GRASS_BLOCK(Minecraft.Block.GRASS_BLOCK, 64, 0),
        DIRT(Minecraft.Block.DIRT, 64, 0),
        COARSE_DIRT(Minecraft.Block.COARSE_DIRT, 64, 0),
        PODZOL(Minecraft.Block.PODZOL, 64, 0),
        CRIMSON_NYLIUM(Minecraft.Block.CRIMSON_NYLIUM, 64, 0),
        WARPED_NYLIUM(Minecraft.Block.WARPED_NYLIUM, 64, 0),
        COBBLESTONE(Minecraft.Block.COBBLESTONE, 64, 0),
        OAK_PLANKS(Minecraft.Block.OAK_PLANKS, 64, 0),
        SPRUCE_PLANKS(Minecraft.Block.SPRUCE_PLANKS, 64, 0),
        BIRCH_PLANKS(Minecraft.Block.BIRCH_PLANKS, 64, 0),
        JUNGLE_PLANKS(Minecraft.Block.JUNGLE_PLANKS, 64, 0),
        ACACIA_PLANKS(Minecraft.Block.ACACIA_PLANKS, 64, 0),
        DARK_OAK_PLANKS(Minecraft.Block.DARK_OAK_PLANKS, 64, 0),
        CRIMSON_PLANKS(Minecraft.Block.CRIMSON_PLANKS, 64, 0),
        WARPED_PLANKS(Minecraft.Block.WARPED_PLANKS, 64, 0),
        OAK_SAPLING(Minecraft.Block.OAK_SAPLING, 64, 0),
        SPRUCE_SAPLING(Minecraft.Block.SPRUCE_SAPLING, 64, 0),
        BIRCH_SAPLING(Minecraft.Block.BIRCH_SAPLING, 64, 0),
        JUNGLE_SAPLING(Minecraft.Block.JUNGLE_SAPLING, 64, 0),
        ACACIA_SAPLING(Minecraft.Block.ACACIA_SAPLING, 64, 0),
        DARK_OAK_SAPLING(Minecraft.Block.DARK_OAK_SAPLING, 64, 0),
        BEDROCK(Minecraft.Block.BEDROCK, 64, 0),
        SAND(Minecraft.Block.SAND, 64, 0),
        RED_SAND(Minecraft.Block.RED_SAND, 64, 0),
        GRAVEL(Minecraft.Block.GRAVEL, 64, 0),
        GOLD_ORE(Minecraft.Block.GOLD_ORE, 64, 0),
        IRON_ORE(Minecraft.Block.IRON_ORE, 64, 0),
        COAL_ORE(Minecraft.Block.COAL_ORE, 64, 0),
        NETHER_GOLD_ORE(Minecraft.Block.NETHER_GOLD_ORE, 64, 0),
        OAK_LOG(Minecraft.Block.OAK_LOG, 64, 0),
        SPRUCE_LOG(Minecraft.Block.SPRUCE_LOG, 64, 0),
        BIRCH_LOG(Minecraft.Block.BIRCH_LOG, 64, 0),
        JUNGLE_LOG(Minecraft.Block.JUNGLE_LOG, 64, 0),
        ACACIA_LOG(Minecraft.Block.ACACIA_LOG, 64, 0),
        DARK_OAK_LOG(Minecraft.Block.DARK_OAK_LOG, 64, 0),
        CRIMSON_STEM(Minecraft.Block.CRIMSON_STEM, 64, 0),
        WARPED_STEM(Minecraft.Block.WARPED_STEM, 64, 0),
        STRIPPED_OAK_LOG(Minecraft.Block.STRIPPED_OAK_LOG, 64, 0),
        STRIPPED_SPRUCE_LOG(Minecraft.Block.STRIPPED_SPRUCE_LOG, 64, 0),
        STRIPPED_BIRCH_LOG(Minecraft.Block.STRIPPED_BIRCH_LOG, 64, 0),
        STRIPPED_JUNGLE_LOG(Minecraft.Block.STRIPPED_JUNGLE_LOG, 64, 0),
        STRIPPED_ACACIA_LOG(Minecraft.Block.STRIPPED_ACACIA_LOG, 64, 0),
        STRIPPED_DARK_OAK_LOG(Minecraft.Block.STRIPPED_DARK_OAK_LOG, 64, 0),
        STRIPPED_CRIMSON_STEM(Minecraft.Block.STRIPPED_CRIMSON_STEM, 64, 0),
        STRIPPED_WARPED_STEM(Minecraft.Block.STRIPPED_WARPED_STEM, 64, 0),
        STRIPPED_OAK_WOOD(Minecraft.Block.STRIPPED_OAK_WOOD, 64, 0),
        STRIPPED_SPRUCE_WOOD(Minecraft.Block.STRIPPED_SPRUCE_WOOD, 64, 0),
        STRIPPED_BIRCH_WOOD(Minecraft.Block.STRIPPED_BIRCH_WOOD, 64, 0),
        STRIPPED_JUNGLE_WOOD(Minecraft.Block.STRIPPED_JUNGLE_WOOD, 64, 0),
        STRIPPED_ACACIA_WOOD(Minecraft.Block.STRIPPED_ACACIA_WOOD, 64, 0),
        STRIPPED_DARK_OAK_WOOD(Minecraft.Block.STRIPPED_DARK_OAK_WOOD, 64, 0),
        STRIPPED_CRIMSON_HYPHAE(Minecraft.Block.STRIPPED_CRIMSON_HYPHAE, 64, 0),
        STRIPPED_WARPED_HYPHAE(Minecraft.Block.STRIPPED_WARPED_HYPHAE, 64, 0),
        OAK_WOOD(Minecraft.Block.OAK_WOOD, 64, 0),
        SPRUCE_WOOD(Minecraft.Block.SPRUCE_WOOD, 64, 0),
        BIRCH_WOOD(Minecraft.Block.BIRCH_WOOD, 64, 0),
        JUNGLE_WOOD(Minecraft.Block.JUNGLE_WOOD, 64, 0),
        ACACIA_WOOD(Minecraft.Block.ACACIA_WOOD, 64, 0),
        DARK_OAK_WOOD(Minecraft.Block.DARK_OAK_WOOD, 64, 0),
        CRIMSON_HYPHAE(Minecraft.Block.CRIMSON_HYPHAE, 64, 0),
        WARPED_HYPHAE(Minecraft.Block.WARPED_HYPHAE, 64, 0),
        OAK_LEAVES(Minecraft.Block.OAK_LEAVES, 64, 0),
        SPRUCE_LEAVES(Minecraft.Block.SPRUCE_LEAVES, 64, 0),
        BIRCH_LEAVES(Minecraft.Block.BIRCH_LEAVES, 64, 0),
        JUNGLE_LEAVES(Minecraft.Block.JUNGLE_LEAVES, 64, 0),
        ACACIA_LEAVES(Minecraft.Block.ACACIA_LEAVES, 64, 0),
        DARK_OAK_LEAVES(Minecraft.Block.DARK_OAK_LEAVES, 64, 0),
        SPONGE(Minecraft.Block.SPONGE, 64, 0),
        WET_SPONGE(Minecraft.Block.WET_SPONGE, 64, 0),
        GLASS(Minecraft.Block.GLASS, 64, 0),
        LAPIS_ORE(Minecraft.Block.LAPIS_ORE, 64, 0),
        LAPIS_BLOCK(Minecraft.Block.LAPIS_BLOCK, 64, 0),
        DISPENSER(Minecraft.Block.DISPENSER, 64, 0),
        SANDSTONE(Minecraft.Block.SANDSTONE, 64, 0),
        CHISELED_SANDSTONE(Minecraft.Block.CHISELED_SANDSTONE, 64, 0),
        CUT_SANDSTONE(Minecraft.Block.CUT_SANDSTONE, 64, 0),
        NOTE_BLOCK(Minecraft.Block.NOTE_BLOCK, 64, 0),
        POWERED_RAIL(Minecraft.Block.POWERED_RAIL, 64, 0),
        DETECTOR_RAIL(Minecraft.Block.DETECTOR_RAIL, 64, 0),
        STICKY_PISTON(Minecraft.Block.STICKY_PISTON, 64, 0),
        COBWEB(Minecraft.Block.COBWEB, 64, 0),
        GRASS(Minecraft.Block.GRASS, 64, 0),
        FERN(Minecraft.Block.FERN, 64, 0),
        DEAD_BUSH(Minecraft.Block.DEAD_BUSH, 64, 0),
        SEAGRASS(Minecraft.Block.SEAGRASS, 64, 0),
        SEA_PICKLE(Minecraft.Block.SEA_PICKLE, 64, 0),
        PISTON(Minecraft.Block.PISTON, 64, 0),
        WHITE_WOOL(Minecraft.Block.WHITE_WOOL, 64, 0),
        ORANGE_WOOL(Minecraft.Block.ORANGE_WOOL, 64, 0),
        MAGENTA_WOOL(Minecraft.Block.MAGENTA_WOOL, 64, 0),
        LIGHT_BLUE_WOOL(Minecraft.Block.LIGHT_BLUE_WOOL, 64, 0),
        YELLOW_WOOL(Minecraft.Block.YELLOW_WOOL, 64, 0),
        LIME_WOOL(Minecraft.Block.LIME_WOOL, 64, 0),
        PINK_WOOL(Minecraft.Block.PINK_WOOL, 64, 0),
        GRAY_WOOL(Minecraft.Block.GRAY_WOOL, 64, 0),
        LIGHT_GRAY_WOOL(Minecraft.Block.LIGHT_GRAY_WOOL, 64, 0),
        CYAN_WOOL(Minecraft.Block.CYAN_WOOL, 64, 0),
        PURPLE_WOOL(Minecraft.Block.PURPLE_WOOL, 64, 0),
        BLUE_WOOL(Minecraft.Block.BLUE_WOOL, 64, 0),
        BROWN_WOOL(Minecraft.Block.BROWN_WOOL, 64, 0),
        GREEN_WOOL(Minecraft.Block.GREEN_WOOL, 64, 0),
        RED_WOOL(Minecraft.Block.RED_WOOL, 64, 0),
        BLACK_WOOL(Minecraft.Block.BLACK_WOOL, 64, 0),
        DANDELION(Minecraft.Block.DANDELION, 64, 0),
        POPPY(Minecraft.Block.POPPY, 64, 0),
        BLUE_ORCHID(Minecraft.Block.BLUE_ORCHID, 64, 0),
        ALLIUM(Minecraft.Block.ALLIUM, 64, 0),
        AZURE_BLUET(Minecraft.Block.AZURE_BLUET, 64, 0),
        RED_TULIP(Minecraft.Block.RED_TULIP, 64, 0),
        ORANGE_TULIP(Minecraft.Block.ORANGE_TULIP, 64, 0),
        WHITE_TULIP(Minecraft.Block.WHITE_TULIP, 64, 0),
        PINK_TULIP(Minecraft.Block.PINK_TULIP, 64, 0),
        OXEYE_DAISY(Minecraft.Block.OXEYE_DAISY, 64, 0),
        CORNFLOWER(Minecraft.Block.CORNFLOWER, 64, 0),
        LILY_OF_THE_VALLEY(Minecraft.Block.LILY_OF_THE_VALLEY, 64, 0),
        WITHER_ROSE(Minecraft.Block.WITHER_ROSE, 64, 0),
        BROWN_MUSHROOM(Minecraft.Block.BROWN_MUSHROOM, 64, 0),
        RED_MUSHROOM(Minecraft.Block.RED_MUSHROOM, 64, 0),
        CRIMSON_FUNGUS(Minecraft.Block.CRIMSON_FUNGUS, 64, 0),
        WARPED_FUNGUS(Minecraft.Block.WARPED_FUNGUS, 64, 0),
        CRIMSON_ROOTS(Minecraft.Block.CRIMSON_ROOTS, 64, 0),
        WARPED_ROOTS(Minecraft.Block.WARPED_ROOTS, 64, 0),
        NETHER_SPROUTS(Minecraft.Block.NETHER_SPROUTS, 64, 0),
        WEEPING_VINES(Minecraft.Block.WEEPING_VINES, 64, 0),
        TWISTING_VINES(Minecraft.Block.TWISTING_VINES, 64, 0),
        SUGAR_CANE(Minecraft.Block.SUGAR_CANE, 64, 0),
        KELP(Minecraft.Block.KELP, 64, 0),
        BAMBOO(Minecraft.Block.BAMBOO, 64, 0),
        GOLD_BLOCK(Minecraft.Block.GOLD_BLOCK, 64, 0),
        IRON_BLOCK(Minecraft.Block.IRON_BLOCK, 64, 0),
        OAK_SLAB(Minecraft.Block.OAK_SLAB, 64, 0),
        SPRUCE_SLAB(Minecraft.Block.SPRUCE_SLAB, 64, 0),
        BIRCH_SLAB(Minecraft.Block.BIRCH_SLAB, 64, 0),
        JUNGLE_SLAB(Minecraft.Block.JUNGLE_SLAB, 64, 0),
        ACACIA_SLAB(Minecraft.Block.ACACIA_SLAB, 64, 0),
        DARK_OAK_SLAB(Minecraft.Block.DARK_OAK_SLAB, 64, 0),
        CRIMSON_SLAB(Minecraft.Block.CRIMSON_SLAB, 64, 0),
        WARPED_SLAB(Minecraft.Block.WARPED_SLAB, 64, 0),
        STONE_SLAB(Minecraft.Block.STONE_SLAB, 64, 0),
        SMOOTH_STONE_SLAB(Minecraft.Block.SMOOTH_STONE_SLAB, 64, 0),
        SANDSTONE_SLAB(Minecraft.Block.SANDSTONE_SLAB, 64, 0),
        CUT_SANDSTONE_SLAB(Minecraft.Block.CUT_SANDSTONE_SLAB, 64, 0),
        PETRIFIED_OAK_SLAB(Minecraft.Block.PETRIFIED_OAK_SLAB, 64, 0),
        COBBLESTONE_SLAB(Minecraft.Block.COBBLESTONE_SLAB, 64, 0),
        BRICK_SLAB(Minecraft.Block.BRICK_SLAB, 64, 0),
        STONE_BRICK_SLAB(Minecraft.Block.STONE_BRICK_SLAB, 64, 0),
        NETHER_BRICK_SLAB(Minecraft.Block.NETHER_BRICK_SLAB, 64, 0),
        QUARTZ_SLAB(Minecraft.Block.QUARTZ_SLAB, 64, 0),
        RED_SANDSTONE_SLAB(Minecraft.Block.RED_SANDSTONE_SLAB, 64, 0),
        CUT_RED_SANDSTONE_SLAB(Minecraft.Block.CUT_RED_SANDSTONE_SLAB, 64, 0),
        PURPUR_SLAB(Minecraft.Block.PURPUR_SLAB, 64, 0),
        PRISMARINE_SLAB(Minecraft.Block.PRISMARINE_SLAB, 64, 0),
        PRISMARINE_BRICK_SLAB(Minecraft.Block.PRISMARINE_BRICK_SLAB, 64, 0),
        DARK_PRISMARINE_SLAB(Minecraft.Block.DARK_PRISMARINE_SLAB, 64, 0),
        SMOOTH_QUARTZ(Minecraft.Block.SMOOTH_QUARTZ, 64, 0),
        SMOOTH_RED_SANDSTONE(Minecraft.Block.SMOOTH_RED_SANDSTONE, 64, 0),
        SMOOTH_SANDSTONE(Minecraft.Block.SMOOTH_SANDSTONE, 64, 0),
        SMOOTH_STONE(Minecraft.Block.SMOOTH_STONE, 64, 0),
        BRICKS(Minecraft.Block.BRICKS, 64, 0),
        TNT(Minecraft.Block.TNT, 64, 0),
        BOOKSHELF(Minecraft.Block.BOOKSHELF, 64, 0),
        MOSSY_COBBLESTONE(Minecraft.Block.MOSSY_COBBLESTONE, 64, 0),
        OBSIDIAN(Minecraft.Block.OBSIDIAN, 64, 0),
        TORCH(Minecraft.Block.TORCH, 64, 0),
        END_ROD(Minecraft.Block.END_ROD, 64, 0),
        CHORUS_PLANT(Minecraft.Block.CHORUS_PLANT, 64, 0),
        CHORUS_FLOWER(Minecraft.Block.CHORUS_FLOWER, 64, 0),
        PURPUR_BLOCK(Minecraft.Block.PURPUR_BLOCK, 64, 0),
        PURPUR_PILLAR(Minecraft.Block.PURPUR_PILLAR, 64, 0),
        PURPUR_STAIRS(Minecraft.Block.PURPUR_STAIRS, 64, 0),
        SPAWNER(Minecraft.Block.SPAWNER, 64, 0),
        OAK_STAIRS(Minecraft.Block.OAK_STAIRS, 64, 0),
        CHEST(Minecraft.Block.CHEST, 64, 0),
        DIAMOND_ORE(Minecraft.Block.DIAMOND_ORE, 64, 0),
        DIAMOND_BLOCK(Minecraft.Block.DIAMOND_BLOCK, 64, 0),
        CRAFTING_TABLE(Minecraft.Block.CRAFTING_TABLE, 64, 0),
        FARMLAND(Minecraft.Block.FARMLAND, 64, 0),
        FURNACE(Minecraft.Block.FURNACE, 64, 0),
        LADDER(Minecraft.Block.LADDER, 64, 0),
        RAIL(Minecraft.Block.RAIL, 64, 0),
        COBBLESTONE_STAIRS(Minecraft.Block.COBBLESTONE_STAIRS, 64, 0),
        LEVER(Minecraft.Block.LEVER, 64, 0),
        STONE_PRESSURE_PLATE(Minecraft.Block.STONE_PRESSURE_PLATE, 64, 0),
        OAK_PRESSURE_PLATE(Minecraft.Block.OAK_PRESSURE_PLATE, 64, 0),
        SPRUCE_PRESSURE_PLATE(Minecraft.Block.SPRUCE_PRESSURE_PLATE, 64, 0),
        BIRCH_PRESSURE_PLATE(Minecraft.Block.BIRCH_PRESSURE_PLATE, 64, 0),
        JUNGLE_PRESSURE_PLATE(Minecraft.Block.JUNGLE_PRESSURE_PLATE, 64, 0),
        ACACIA_PRESSURE_PLATE(Minecraft.Block.ACACIA_PRESSURE_PLATE, 64, 0),
        DARK_OAK_PRESSURE_PLATE(Minecraft.Block.DARK_OAK_PRESSURE_PLATE, 64, 0),
        CRIMSON_PRESSURE_PLATE(Minecraft.Block.CRIMSON_PRESSURE_PLATE, 64, 0),
        WARPED_PRESSURE_PLATE(Minecraft.Block.WARPED_PRESSURE_PLATE, 64, 0),
        POLISHED_BLACKSTONE_PRESSURE_PLATE(Minecraft.Block.POLISHED_BLACKSTONE_PRESSURE_PLATE, 64, 0),
        REDSTONE_ORE(Minecraft.Block.REDSTONE_ORE, 64, 0),
        REDSTONE_TORCH(Minecraft.Block.REDSTONE_TORCH, 64, 0),
        SNOW(Minecraft.Block.SNOW, 64, 0),
        ICE(Minecraft.Block.ICE, 64, 0),
        SNOW_BLOCK(Minecraft.Block.SNOW_BLOCK, 64, 0),
        CACTUS(Minecraft.Block.CACTUS, 64, 0),
        CLAY(Minecraft.Block.CLAY, 64, 0),
        JUKEBOX(Minecraft.Block.JUKEBOX, 64, 0),
        OAK_FENCE(Minecraft.Block.OAK_FENCE, 64, 0),
        SPRUCE_FENCE(Minecraft.Block.SPRUCE_FENCE, 64, 0),
        BIRCH_FENCE(Minecraft.Block.BIRCH_FENCE, 64, 0),
        JUNGLE_FENCE(Minecraft.Block.JUNGLE_FENCE, 64, 0),
        ACACIA_FENCE(Minecraft.Block.ACACIA_FENCE, 64, 0),
        DARK_OAK_FENCE(Minecraft.Block.DARK_OAK_FENCE, 64, 0),
        CRIMSON_FENCE(Minecraft.Block.CRIMSON_FENCE, 64, 0),
        WARPED_FENCE(Minecraft.Block.WARPED_FENCE, 64, 0),
        PUMPKIN(Minecraft.Block.PUMPKIN, 64, 0),
        CARVED_PUMPKIN(Minecraft.Block.CARVED_PUMPKIN, 64, 0),
        NETHERRACK(Minecraft.Block.NETHERRACK, 64, 0),
        SOUL_SAND(Minecraft.Block.SOUL_SAND, 64, 0),
        SOUL_SOIL(Minecraft.Block.SOUL_SOIL, 64, 0),
        BASALT(Minecraft.Block.BASALT, 64, 0),
        POLISHED_BASALT(Minecraft.Block.POLISHED_BASALT, 64, 0),
        SOUL_TORCH(Minecraft.Block.SOUL_TORCH, 64, 0),
        GLOWSTONE(Minecraft.Block.GLOWSTONE, 64, 0),
        JACK_O_LANTERN(Minecraft.Block.JACK_O_LANTERN, 64, 0),
        OAK_TRAPDOOR(Minecraft.Block.OAK_TRAPDOOR, 64, 0),
        SPRUCE_TRAPDOOR(Minecraft.Block.SPRUCE_TRAPDOOR, 64, 0),
        BIRCH_TRAPDOOR(Minecraft.Block.BIRCH_TRAPDOOR, 64, 0),
        JUNGLE_TRAPDOOR(Minecraft.Block.JUNGLE_TRAPDOOR, 64, 0),
        ACACIA_TRAPDOOR(Minecraft.Block.ACACIA_TRAPDOOR, 64, 0),
        DARK_OAK_TRAPDOOR(Minecraft.Block.DARK_OAK_TRAPDOOR, 64, 0),
        CRIMSON_TRAPDOOR(Minecraft.Block.CRIMSON_TRAPDOOR, 64, 0),
        WARPED_TRAPDOOR(Minecraft.Block.WARPED_TRAPDOOR, 64, 0),
        INFESTED_STONE(Minecraft.Block.INFESTED_STONE, 64, 0),
        INFESTED_COBBLESTONE(Minecraft.Block.INFESTED_COBBLESTONE, 64, 0),
        INFESTED_STONE_BRICKS(Minecraft.Block.INFESTED_STONE_BRICKS, 64, 0),
        INFESTED_MOSSY_STONE_BRICKS(Minecraft.Block.INFESTED_MOSSY_STONE_BRICKS, 64, 0),
        INFESTED_CRACKED_STONE_BRICKS(Minecraft.Block.INFESTED_CRACKED_STONE_BRICKS, 64, 0),
        INFESTED_CHISELED_STONE_BRICKS(Minecraft.Block.INFESTED_CHISELED_STONE_BRICKS, 64, 0),
        STONE_BRICKS(Minecraft.Block.STONE_BRICKS, 64, 0),
        MOSSY_STONE_BRICKS(Minecraft.Block.MOSSY_STONE_BRICKS, 64, 0),
        CRACKED_STONE_BRICKS(Minecraft.Block.CRACKED_STONE_BRICKS, 64, 0),
        CHISELED_STONE_BRICKS(Minecraft.Block.CHISELED_STONE_BRICKS, 64, 0),
        BROWN_MUSHROOM_BLOCK(Minecraft.Block.BROWN_MUSHROOM_BLOCK, 64, 0),
        RED_MUSHROOM_BLOCK(Minecraft.Block.RED_MUSHROOM_BLOCK, 64, 0),
        MUSHROOM_STEM(Minecraft.Block.MUSHROOM_STEM, 64, 0),
        IRON_BARS(Minecraft.Block.IRON_BARS, 64, 0),
        CHAIN(Minecraft.Block.CHAIN, 64, 0),
        GLASS_PANE(Minecraft.Block.GLASS_PANE, 64, 0),
        MELON(Minecraft.Block.MELON, 64, 0),
        VINE(Minecraft.Block.VINE, 64, 0),
        OAK_FENCE_GATE(Minecraft.Block.OAK_FENCE_GATE, 64, 0),
        SPRUCE_FENCE_GATE(Minecraft.Block.SPRUCE_FENCE_GATE, 64, 0),
        BIRCH_FENCE_GATE(Minecraft.Block.BIRCH_FENCE_GATE, 64, 0),
        JUNGLE_FENCE_GATE(Minecraft.Block.JUNGLE_FENCE_GATE, 64, 0),
        ACACIA_FENCE_GATE(Minecraft.Block.ACACIA_FENCE_GATE, 64, 0),
        DARK_OAK_FENCE_GATE(Minecraft.Block.DARK_OAK_FENCE_GATE, 64, 0),
        CRIMSON_FENCE_GATE(Minecraft.Block.CRIMSON_FENCE_GATE, 64, 0),
        WARPED_FENCE_GATE(Minecraft.Block.WARPED_FENCE_GATE, 64, 0),
        BRICK_STAIRS(Minecraft.Block.BRICK_STAIRS, 64, 0),
        STONE_BRICK_STAIRS(Minecraft.Block.STONE_BRICK_STAIRS, 64, 0),
        MYCELIUM(Minecraft.Block.MYCELIUM, 64, 0),
        LILY_PAD(Minecraft.Block.LILY_PAD, 64, 0),
        NETHER_BRICKS(Minecraft.Block.NETHER_BRICKS, 64, 0),
        CRACKED_NETHER_BRICKS(Minecraft.Block.CRACKED_NETHER_BRICKS, 64, 0),
        CHISELED_NETHER_BRICKS(Minecraft.Block.CHISELED_NETHER_BRICKS, 64, 0),
        NETHER_BRICK_FENCE(Minecraft.Block.NETHER_BRICK_FENCE, 64, 0),
        NETHER_BRICK_STAIRS(Minecraft.Block.NETHER_BRICK_STAIRS, 64, 0),
        ENCHANTING_TABLE(Minecraft.Block.ENCHANTING_TABLE, 64, 0),
        END_PORTAL_FRAME(Minecraft.Block.END_PORTAL_FRAME, 64, 0),
        END_STONE(Minecraft.Block.END_STONE, 64, 0),
        END_STONE_BRICKS(Minecraft.Block.END_STONE_BRICKS, 64, 0),
        DRAGON_EGG(Minecraft.Block.DRAGON_EGG, 64, 0),
        REDSTONE_LAMP(Minecraft.Block.REDSTONE_LAMP, 64, 0),
        SANDSTONE_STAIRS(Minecraft.Block.SANDSTONE_STAIRS, 64, 0),
        EMERALD_ORE(Minecraft.Block.EMERALD_ORE, 64, 0),
        ENDER_CHEST(Minecraft.Block.ENDER_CHEST, 64, 0),
        TRIPWIRE_HOOK(Minecraft.Block.TRIPWIRE_HOOK, 64, 0),
        EMERALD_BLOCK(Minecraft.Block.EMERALD_BLOCK, 64, 0),
        SPRUCE_STAIRS(Minecraft.Block.SPRUCE_STAIRS, 64, 0),
        BIRCH_STAIRS(Minecraft.Block.BIRCH_STAIRS, 64, 0),
        JUNGLE_STAIRS(Minecraft.Block.JUNGLE_STAIRS, 64, 0),
        CRIMSON_STAIRS(Minecraft.Block.CRIMSON_STAIRS, 64, 0),
        WARPED_STAIRS(Minecraft.Block.WARPED_STAIRS, 64, 0),
        COMMAND_BLOCK(Minecraft.Block.COMMAND_BLOCK, 64, 0),
        BEACON(Minecraft.Block.BEACON, 64, 0),
        COBBLESTONE_WALL(Minecraft.Block.COBBLESTONE_WALL, 64, 0),
        MOSSY_COBBLESTONE_WALL(Minecraft.Block.MOSSY_COBBLESTONE_WALL, 64, 0),
        BRICK_WALL(Minecraft.Block.BRICK_WALL, 64, 0),
        PRISMARINE_WALL(Minecraft.Block.PRISMARINE_WALL, 64, 0),
        RED_SANDSTONE_WALL(Minecraft.Block.RED_SANDSTONE_WALL, 64, 0),
        MOSSY_STONE_BRICK_WALL(Minecraft.Block.MOSSY_STONE_BRICK_WALL, 64, 0),
        GRANITE_WALL(Minecraft.Block.GRANITE_WALL, 64, 0),
        STONE_BRICK_WALL(Minecraft.Block.STONE_BRICK_WALL, 64, 0),
        NETHER_BRICK_WALL(Minecraft.Block.NETHER_BRICK_WALL, 64, 0),
        ANDESITE_WALL(Minecraft.Block.ANDESITE_WALL, 64, 0),
        RED_NETHER_BRICK_WALL(Minecraft.Block.RED_NETHER_BRICK_WALL, 64, 0),
        SANDSTONE_WALL(Minecraft.Block.SANDSTONE_WALL, 64, 0),
        END_STONE_BRICK_WALL(Minecraft.Block.END_STONE_BRICK_WALL, 64, 0),
        DIORITE_WALL(Minecraft.Block.DIORITE_WALL, 64, 0),
        BLACKSTONE_WALL(Minecraft.Block.BLACKSTONE_WALL, 64, 0),
        POLISHED_BLACKSTONE_WALL(Minecraft.Block.POLISHED_BLACKSTONE_WALL, 64, 0),
        POLISHED_BLACKSTONE_BRICK_WALL(Minecraft.Block.POLISHED_BLACKSTONE_BRICK_WALL, 64, 0),
        STONE_BUTTON(Minecraft.Block.STONE_BUTTON, 64, 0),
        OAK_BUTTON(Minecraft.Block.OAK_BUTTON, 64, 0),
        SPRUCE_BUTTON(Minecraft.Block.SPRUCE_BUTTON, 64, 0),
        BIRCH_BUTTON(Minecraft.Block.BIRCH_BUTTON, 64, 0),
        JUNGLE_BUTTON(Minecraft.Block.JUNGLE_BUTTON, 64, 0),
        ACACIA_BUTTON(Minecraft.Block.ACACIA_BUTTON, 64, 0),
        DARK_OAK_BUTTON(Minecraft.Block.DARK_OAK_BUTTON, 64, 0),
        CRIMSON_BUTTON(Minecraft.Block.CRIMSON_BUTTON, 64, 0),
        WARPED_BUTTON(Minecraft.Block.WARPED_BUTTON, 64, 0),
        POLISHED_BLACKSTONE_BUTTON(Minecraft.Block.POLISHED_BLACKSTONE_BUTTON, 64, 0),
        ANVIL(Minecraft.Block.ANVIL, 64, 0),
        CHIPPED_ANVIL(Minecraft.Block.CHIPPED_ANVIL, 64, 0),
        DAMAGED_ANVIL(Minecraft.Block.DAMAGED_ANVIL, 64, 0),
        TRAPPED_CHEST(Minecraft.Block.TRAPPED_CHEST, 64, 0),
        LIGHT_WEIGHTED_PRESSURE_PLATE(Minecraft.Block.LIGHT_WEIGHTED_PRESSURE_PLATE, 64, 0),
        HEAVY_WEIGHTED_PRESSURE_PLATE(Minecraft.Block.HEAVY_WEIGHTED_PRESSURE_PLATE, 64, 0),
        DAYLIGHT_DETECTOR(Minecraft.Block.DAYLIGHT_DETECTOR, 64, 0),
        REDSTONE_BLOCK(Minecraft.Block.REDSTONE_BLOCK, 64, 0),
        NETHER_QUARTZ_ORE(Minecraft.Block.NETHER_QUARTZ_ORE, 64, 0),
        HOPPER(Minecraft.Block.HOPPER, 64, 0),
        CHISELED_QUARTZ_BLOCK(Minecraft.Block.CHISELED_QUARTZ_BLOCK, 64, 0),
        QUARTZ_BLOCK(Minecraft.Block.QUARTZ_BLOCK, 64, 0),
        QUARTZ_BRICKS(Minecraft.Block.QUARTZ_BRICKS, 64, 0),
        QUARTZ_PILLAR(Minecraft.Block.QUARTZ_PILLAR, 64, 0),
        QUARTZ_STAIRS(Minecraft.Block.QUARTZ_STAIRS, 64, 0),
        ACTIVATOR_RAIL(Minecraft.Block.ACTIVATOR_RAIL, 64, 0),
        DROPPER(Minecraft.Block.DROPPER, 64, 0),
        WHITE_TERRACOTTA(Minecraft.Block.WHITE_TERRACOTTA, 64, 0),
        ORANGE_TERRACOTTA(Minecraft.Block.ORANGE_TERRACOTTA, 64, 0),
        MAGENTA_TERRACOTTA(Minecraft.Block.MAGENTA_TERRACOTTA, 64, 0),
        LIGHT_BLUE_TERRACOTTA(Minecraft.Block.LIGHT_BLUE_TERRACOTTA, 64, 0),
        YELLOW_TERRACOTTA(Minecraft.Block.YELLOW_TERRACOTTA, 64, 0),
        LIME_TERRACOTTA(Minecraft.Block.LIME_TERRACOTTA, 64, 0),
        PINK_TERRACOTTA(Minecraft.Block.PINK_TERRACOTTA, 64, 0),
        GRAY_TERRACOTTA(Minecraft.Block.GRAY_TERRACOTTA, 64, 0),
        LIGHT_GRAY_TERRACOTTA(Minecraft.Block.LIGHT_GRAY_TERRACOTTA, 64, 0),
        CYAN_TERRACOTTA(Minecraft.Block.CYAN_TERRACOTTA, 64, 0),
        PURPLE_TERRACOTTA(Minecraft.Block.PURPLE_TERRACOTTA, 64, 0),
        BLUE_TERRACOTTA(Minecraft.Block.BLUE_TERRACOTTA, 64, 0),
        BROWN_TERRACOTTA(Minecraft.Block.BROWN_TERRACOTTA, 64, 0),
        GREEN_TERRACOTTA(Minecraft.Block.GREEN_TERRACOTTA, 64, 0),
        RED_TERRACOTTA(Minecraft.Block.RED_TERRACOTTA, 64, 0),
        BLACK_TERRACOTTA(Minecraft.Block.BLACK_TERRACOTTA, 64, 0),
        BARRIER(Minecraft.Block.BARRIER, 64, 0),
        IRON_TRAPDOOR(Minecraft.Block.IRON_TRAPDOOR, 64, 0),
        HAY_BLOCK(Minecraft.Block.HAY_BLOCK, 64, 0),
        WHITE_CARPET(Minecraft.Block.WHITE_CARPET, 64, 0),
        ORANGE_CARPET(Minecraft.Block.ORANGE_CARPET, 64, 0),
        MAGENTA_CARPET(Minecraft.Block.MAGENTA_CARPET, 64, 0),
        LIGHT_BLUE_CARPET(Minecraft.Block.LIGHT_BLUE_CARPET, 64, 0),
        YELLOW_CARPET(Minecraft.Block.YELLOW_CARPET, 64, 0),
        LIME_CARPET(Minecraft.Block.LIME_CARPET, 64, 0),
        PINK_CARPET(Minecraft.Block.PINK_CARPET, 64, 0),
        GRAY_CARPET(Minecraft.Block.GRAY_CARPET, 64, 0),
        LIGHT_GRAY_CARPET(Minecraft.Block.LIGHT_GRAY_CARPET, 64, 0),
        CYAN_CARPET(Minecraft.Block.CYAN_CARPET, 64, 0),
        PURPLE_CARPET(Minecraft.Block.PURPLE_CARPET, 64, 0),
        BLUE_CARPET(Minecraft.Block.BLUE_CARPET, 64, 0),
        BROWN_CARPET(Minecraft.Block.BROWN_CARPET, 64, 0),
        GREEN_CARPET(Minecraft.Block.GREEN_CARPET, 64, 0),
        RED_CARPET(Minecraft.Block.RED_CARPET, 64, 0),
        BLACK_CARPET(Minecraft.Block.BLACK_CARPET, 64, 0),
        TERRACOTTA(Minecraft.Block.TERRACOTTA, 64, 0),
        COAL_BLOCK(Minecraft.Block.COAL_BLOCK, 64, 0),
        PACKED_ICE(Minecraft.Block.PACKED_ICE, 64, 0),
        ACACIA_STAIRS(Minecraft.Block.ACACIA_STAIRS, 64, 0),
        DARK_OAK_STAIRS(Minecraft.Block.DARK_OAK_STAIRS, 64, 0),
        SLIME_BLOCK(Minecraft.Block.SLIME_BLOCK, 64, 0),
        GRASS_PATH(Minecraft.Block.GRASS_PATH, 64, 0),
        SUNFLOWER(Minecraft.Block.SUNFLOWER, 64, 0),
        LILAC(Minecraft.Block.LILAC, 64, 0),
        ROSE_BUSH(Minecraft.Block.ROSE_BUSH, 64, 0),
        PEONY(Minecraft.Block.PEONY, 64, 0),
        TALL_GRASS(Minecraft.Block.TALL_GRASS, 64, 0),
        LARGE_FERN(Minecraft.Block.LARGE_FERN, 64, 0),
        WHITE_STAINED_GLASS(Minecraft.Block.WHITE_STAINED_GLASS, 64, 0),
        ORANGE_STAINED_GLASS(Minecraft.Block.ORANGE_STAINED_GLASS, 64, 0),
        MAGENTA_STAINED_GLASS(Minecraft.Block.MAGENTA_STAINED_GLASS, 64, 0),
        LIGHT_BLUE_STAINED_GLASS(Minecraft.Block.LIGHT_BLUE_STAINED_GLASS, 64, 0),
        YELLOW_STAINED_GLASS(Minecraft.Block.YELLOW_STAINED_GLASS, 64, 0),
        LIME_STAINED_GLASS(Minecraft.Block.LIME_STAINED_GLASS, 64, 0),
        PINK_STAINED_GLASS(Minecraft.Block.PINK_STAINED_GLASS, 64, 0),
        GRAY_STAINED_GLASS(Minecraft.Block.GRAY_STAINED_GLASS, 64, 0),
        LIGHT_GRAY_STAINED_GLASS(Minecraft.Block.LIGHT_GRAY_STAINED_GLASS, 64, 0),
        CYAN_STAINED_GLASS(Minecraft.Block.CYAN_STAINED_GLASS, 64, 0),
        PURPLE_STAINED_GLASS(Minecraft.Block.PURPLE_STAINED_GLASS, 64, 0),
        BLUE_STAINED_GLASS(Minecraft.Block.BLUE_STAINED_GLASS, 64, 0),
        BROWN_STAINED_GLASS(Minecraft.Block.BROWN_STAINED_GLASS, 64, 0),
        GREEN_STAINED_GLASS(Minecraft.Block.GREEN_STAINED_GLASS, 64, 0),
        RED_STAINED_GLASS(Minecraft.Block.RED_STAINED_GLASS, 64, 0),
        BLACK_STAINED_GLASS(Minecraft.Block.BLACK_STAINED_GLASS, 64, 0),
        WHITE_STAINED_GLASS_PANE(Minecraft.Block.WHITE_STAINED_GLASS_PANE, 64, 0),
        ORANGE_STAINED_GLASS_PANE(Minecraft.Block.ORANGE_STAINED_GLASS_PANE, 64, 0),
        MAGENTA_STAINED_GLASS_PANE(Minecraft.Block.MAGENTA_STAINED_GLASS_PANE, 64, 0),
        LIGHT_BLUE_STAINED_GLASS_PANE(Minecraft.Block.LIGHT_BLUE_STAINED_GLASS_PANE, 64, 0),
        YELLOW_STAINED_GLASS_PANE(Minecraft.Block.YELLOW_STAINED_GLASS_PANE, 64, 0),
        LIME_STAINED_GLASS_PANE(Minecraft.Block.LIME_STAINED_GLASS_PANE, 64, 0),
        PINK_STAINED_GLASS_PANE(Minecraft.Block.PINK_STAINED_GLASS_PANE, 64, 0),
        GRAY_STAINED_GLASS_PANE(Minecraft.Block.GRAY_STAINED_GLASS_PANE, 64, 0),
        LIGHT_GRAY_STAINED_GLASS_PANE(Minecraft.Block.LIGHT_GRAY_STAINED_GLASS_PANE, 64, 0),
        CYAN_STAINED_GLASS_PANE(Minecraft.Block.CYAN_STAINED_GLASS_PANE, 64, 0),
        PURPLE_STAINED_GLASS_PANE(Minecraft.Block.PURPLE_STAINED_GLASS_PANE, 64, 0),
        BLUE_STAINED_GLASS_PANE(Minecraft.Block.BLUE_STAINED_GLASS_PANE, 64, 0),
        BROWN_STAINED_GLASS_PANE(Minecraft.Block.BROWN_STAINED_GLASS_PANE, 64, 0),
        GREEN_STAINED_GLASS_PANE(Minecraft.Block.GREEN_STAINED_GLASS_PANE, 64, 0),
        RED_STAINED_GLASS_PANE(Minecraft.Block.RED_STAINED_GLASS_PANE, 64, 0),
        BLACK_STAINED_GLASS_PANE(Minecraft.Block.BLACK_STAINED_GLASS_PANE, 64, 0),
        PRISMARINE(Minecraft.Block.PRISMARINE, 64, 0),
        PRISMARINE_BRICKS(Minecraft.Block.PRISMARINE_BRICKS, 64, 0),
        DARK_PRISMARINE(Minecraft.Block.DARK_PRISMARINE, 64, 0),
        PRISMARINE_STAIRS(Minecraft.Block.PRISMARINE_STAIRS, 64, 0),
        PRISMARINE_BRICK_STAIRS(Minecraft.Block.PRISMARINE_BRICK_STAIRS, 64, 0),
        DARK_PRISMARINE_STAIRS(Minecraft.Block.DARK_PRISMARINE_STAIRS, 64, 0),
        SEA_LANTERN(Minecraft.Block.SEA_LANTERN, 64, 0),
        RED_SANDSTONE(Minecraft.Block.RED_SANDSTONE, 64, 0),
        CHISELED_RED_SANDSTONE(Minecraft.Block.CHISELED_RED_SANDSTONE, 64, 0),
        CUT_RED_SANDSTONE(Minecraft.Block.CUT_RED_SANDSTONE, 64, 0),
        RED_SANDSTONE_STAIRS(Minecraft.Block.RED_SANDSTONE_STAIRS, 64, 0),
        REPEATING_COMMAND_BLOCK(Minecraft.Block.REPEATING_COMMAND_BLOCK, 64, 0),
        CHAIN_COMMAND_BLOCK(Minecraft.Block.CHAIN_COMMAND_BLOCK, 64, 0),
        MAGMA_BLOCK(Minecraft.Block.MAGMA_BLOCK, 64, 0),
        NETHER_WART_BLOCK(Minecraft.Block.NETHER_WART_BLOCK, 64, 0),
        WARPED_WART_BLOCK(Minecraft.Block.WARPED_WART_BLOCK, 64, 0),
        RED_NETHER_BRICKS(Minecraft.Block.RED_NETHER_BRICKS, 64, 0),
        BONE_BLOCK(Minecraft.Block.BONE_BLOCK, 64, 0),
        STRUCTURE_VOID(Minecraft.Block.STRUCTURE_VOID, 64, 0),
        OBSERVER(Minecraft.Block.OBSERVER, 64, 0),
        SHULKER_BOX(Minecraft.Block.SHULKER_BOX, 1, 0),
        WHITE_SHULKER_BOX(Minecraft.Block.WHITE_SHULKER_BOX, 1, 0),
        ORANGE_SHULKER_BOX(Minecraft.Block.ORANGE_SHULKER_BOX, 1, 0),
        MAGENTA_SHULKER_BOX(Minecraft.Block.MAGENTA_SHULKER_BOX, 1, 0),
        LIGHT_BLUE_SHULKER_BOX(Minecraft.Block.LIGHT_BLUE_SHULKER_BOX, 1, 0),
        YELLOW_SHULKER_BOX(Minecraft.Block.YELLOW_SHULKER_BOX, 1, 0),
        LIME_SHULKER_BOX(Minecraft.Block.LIME_SHULKER_BOX, 1, 0),
        PINK_SHULKER_BOX(Minecraft.Block.PINK_SHULKER_BOX, 1, 0),
        GRAY_SHULKER_BOX(Minecraft.Block.GRAY_SHULKER_BOX, 1, 0),
        LIGHT_GRAY_SHULKER_BOX(Minecraft.Block.LIGHT_GRAY_SHULKER_BOX, 1, 0),
        CYAN_SHULKER_BOX(Minecraft.Block.CYAN_SHULKER_BOX, 1, 0),
        PURPLE_SHULKER_BOX(Minecraft.Block.PURPLE_SHULKER_BOX, 1, 0),
        BLUE_SHULKER_BOX(Minecraft.Block.BLUE_SHULKER_BOX, 1, 0),
        BROWN_SHULKER_BOX(Minecraft.Block.BROWN_SHULKER_BOX, 1, 0),
        GREEN_SHULKER_BOX(Minecraft.Block.GREEN_SHULKER_BOX, 1, 0),
        RED_SHULKER_BOX(Minecraft.Block.RED_SHULKER_BOX, 1, 0),
        BLACK_SHULKER_BOX(Minecraft.Block.BLACK_SHULKER_BOX, 1, 0),
        WHITE_GLAZED_TERRACOTTA(Minecraft.Block.WHITE_GLAZED_TERRACOTTA, 64, 0),
        ORANGE_GLAZED_TERRACOTTA(Minecraft.Block.ORANGE_GLAZED_TERRACOTTA, 64, 0),
        MAGENTA_GLAZED_TERRACOTTA(Minecraft.Block.MAGENTA_GLAZED_TERRACOTTA, 64, 0),
        LIGHT_BLUE_GLAZED_TERRACOTTA(Minecraft.Block.LIGHT_BLUE_GLAZED_TERRACOTTA, 64, 0),
        YELLOW_GLAZED_TERRACOTTA(Minecraft.Block.YELLOW_GLAZED_TERRACOTTA, 64, 0),
        LIME_GLAZED_TERRACOTTA(Minecraft.Block.LIME_GLAZED_TERRACOTTA, 64, 0),
        PINK_GLAZED_TERRACOTTA(Minecraft.Block.PINK_GLAZED_TERRACOTTA, 64, 0),
        GRAY_GLAZED_TERRACOTTA(Minecraft.Block.GRAY_GLAZED_TERRACOTTA, 64, 0),
        LIGHT_GRAY_GLAZED_TERRACOTTA(Minecraft.Block.LIGHT_GRAY_GLAZED_TERRACOTTA, 64, 0),
        CYAN_GLAZED_TERRACOTTA(Minecraft.Block.CYAN_GLAZED_TERRACOTTA, 64, 0),
        PURPLE_GLAZED_TERRACOTTA(Minecraft.Block.PURPLE_GLAZED_TERRACOTTA, 64, 0),
        BLUE_GLAZED_TERRACOTTA(Minecraft.Block.BLUE_GLAZED_TERRACOTTA, 64, 0),
        BROWN_GLAZED_TERRACOTTA(Minecraft.Block.BROWN_GLAZED_TERRACOTTA, 64, 0),
        GREEN_GLAZED_TERRACOTTA(Minecraft.Block.GREEN_GLAZED_TERRACOTTA, 64, 0),
        RED_GLAZED_TERRACOTTA(Minecraft.Block.RED_GLAZED_TERRACOTTA, 64, 0),
        BLACK_GLAZED_TERRACOTTA(Minecraft.Block.BLACK_GLAZED_TERRACOTTA, 64, 0),
        WHITE_CONCRETE(Minecraft.Block.WHITE_CONCRETE, 64, 0),
        ORANGE_CONCRETE(Minecraft.Block.ORANGE_CONCRETE, 64, 0),
        MAGENTA_CONCRETE(Minecraft.Block.MAGENTA_CONCRETE, 64, 0),
        LIGHT_BLUE_CONCRETE(Minecraft.Block.LIGHT_BLUE_CONCRETE, 64, 0),
        YELLOW_CONCRETE(Minecraft.Block.YELLOW_CONCRETE, 64, 0),
        LIME_CONCRETE(Minecraft.Block.LIME_CONCRETE, 64, 0),
        PINK_CONCRETE(Minecraft.Block.PINK_CONCRETE, 64, 0),
        GRAY_CONCRETE(Minecraft.Block.GRAY_CONCRETE, 64, 0),
        LIGHT_GRAY_CONCRETE(Minecraft.Block.LIGHT_GRAY_CONCRETE, 64, 0),
        CYAN_CONCRETE(Minecraft.Block.CYAN_CONCRETE, 64, 0),
        PURPLE_CONCRETE(Minecraft.Block.PURPLE_CONCRETE, 64, 0),
        BLUE_CONCRETE(Minecraft.Block.BLUE_CONCRETE, 64, 0),
        BROWN_CONCRETE(Minecraft.Block.BROWN_CONCRETE, 64, 0),
        GREEN_CONCRETE(Minecraft.Block.GREEN_CONCRETE, 64, 0),
        RED_CONCRETE(Minecraft.Block.RED_CONCRETE, 64, 0),
        BLACK_CONCRETE(Minecraft.Block.BLACK_CONCRETE, 64, 0),
        WHITE_CONCRETE_POWDER(Minecraft.Block.WHITE_CONCRETE_POWDER, 64, 0),
        ORANGE_CONCRETE_POWDER(Minecraft.Block.ORANGE_CONCRETE_POWDER, 64, 0),
        MAGENTA_CONCRETE_POWDER(Minecraft.Block.MAGENTA_CONCRETE_POWDER, 64, 0),
        LIGHT_BLUE_CONCRETE_POWDER(Minecraft.Block.LIGHT_BLUE_CONCRETE_POWDER, 64, 0),
        YELLOW_CONCRETE_POWDER(Minecraft.Block.YELLOW_CONCRETE_POWDER, 64, 0),
        LIME_CONCRETE_POWDER(Minecraft.Block.LIME_CONCRETE_POWDER, 64, 0),
        PINK_CONCRETE_POWDER(Minecraft.Block.PINK_CONCRETE_POWDER, 64, 0),
        GRAY_CONCRETE_POWDER(Minecraft.Block.GRAY_CONCRETE_POWDER, 64, 0),
        LIGHT_GRAY_CONCRETE_POWDER(Minecraft.Block.LIGHT_GRAY_CONCRETE_POWDER, 64, 0),
        CYAN_CONCRETE_POWDER(Minecraft.Block.CYAN_CONCRETE_POWDER, 64, 0),
        PURPLE_CONCRETE_POWDER(Minecraft.Block.PURPLE_CONCRETE_POWDER, 64, 0),
        BLUE_CONCRETE_POWDER(Minecraft.Block.BLUE_CONCRETE_POWDER, 64, 0),
        BROWN_CONCRETE_POWDER(Minecraft.Block.BROWN_CONCRETE_POWDER, 64, 0),
        GREEN_CONCRETE_POWDER(Minecraft.Block.GREEN_CONCRETE_POWDER, 64, 0),
        RED_CONCRETE_POWDER(Minecraft.Block.RED_CONCRETE_POWDER, 64, 0),
        BLACK_CONCRETE_POWDER(Minecraft.Block.BLACK_CONCRETE_POWDER, 64, 0),
        TURTLE_EGG(Minecraft.Block.TURTLE_EGG, 64, 0),
        DEAD_TUBE_CORAL_BLOCK(Minecraft.Block.DEAD_TUBE_CORAL_BLOCK, 64, 0),
        DEAD_BRAIN_CORAL_BLOCK(Minecraft.Block.DEAD_BRAIN_CORAL_BLOCK, 64, 0),
        DEAD_BUBBLE_CORAL_BLOCK(Minecraft.Block.DEAD_BUBBLE_CORAL_BLOCK, 64, 0),
        DEAD_FIRE_CORAL_BLOCK(Minecraft.Block.DEAD_FIRE_CORAL_BLOCK, 64, 0),
        DEAD_HORN_CORAL_BLOCK(Minecraft.Block.DEAD_HORN_CORAL_BLOCK, 64, 0),
        TUBE_CORAL_BLOCK(Minecraft.Block.TUBE_CORAL_BLOCK, 64, 0),
        BRAIN_CORAL_BLOCK(Minecraft.Block.BRAIN_CORAL_BLOCK, 64, 0),
        BUBBLE_CORAL_BLOCK(Minecraft.Block.BUBBLE_CORAL_BLOCK, 64, 0),
        FIRE_CORAL_BLOCK(Minecraft.Block.FIRE_CORAL_BLOCK, 64, 0),
        HORN_CORAL_BLOCK(Minecraft.Block.HORN_CORAL_BLOCK, 64, 0),
        TUBE_CORAL(Minecraft.Block.TUBE_CORAL, 64, 0),
        BRAIN_CORAL(Minecraft.Block.BRAIN_CORAL, 64, 0),
        BUBBLE_CORAL(Minecraft.Block.BUBBLE_CORAL, 64, 0),
        FIRE_CORAL(Minecraft.Block.FIRE_CORAL, 64, 0),
        HORN_CORAL(Minecraft.Block.HORN_CORAL, 64, 0),
        DEAD_BRAIN_CORAL(Minecraft.Block.DEAD_BRAIN_CORAL, 64, 0),
        DEAD_BUBBLE_CORAL(Minecraft.Block.DEAD_BUBBLE_CORAL, 64, 0),
        DEAD_FIRE_CORAL(Minecraft.Block.DEAD_FIRE_CORAL, 64, 0),
        DEAD_HORN_CORAL(Minecraft.Block.DEAD_HORN_CORAL, 64, 0),
        DEAD_TUBE_CORAL(Minecraft.Block.DEAD_TUBE_CORAL, 64, 0),
        TUBE_CORAL_FAN(Minecraft.Block.TUBE_CORAL_FAN, 64, 0),
        BRAIN_CORAL_FAN(Minecraft.Block.BRAIN_CORAL_FAN, 64, 0),
        BUBBLE_CORAL_FAN(Minecraft.Block.BUBBLE_CORAL_FAN, 64, 0),
        FIRE_CORAL_FAN(Minecraft.Block.FIRE_CORAL_FAN, 64, 0),
        HORN_CORAL_FAN(Minecraft.Block.HORN_CORAL_FAN, 64, 0),
        DEAD_TUBE_CORAL_FAN(Minecraft.Block.DEAD_TUBE_CORAL_FAN, 64, 0),
        DEAD_BRAIN_CORAL_FAN(Minecraft.Block.DEAD_BRAIN_CORAL_FAN, 64, 0),
        DEAD_BUBBLE_CORAL_FAN(Minecraft.Block.DEAD_BUBBLE_CORAL_FAN, 64, 0),
        DEAD_FIRE_CORAL_FAN(Minecraft.Block.DEAD_FIRE_CORAL_FAN, 64, 0),
        DEAD_HORN_CORAL_FAN(Minecraft.Block.DEAD_HORN_CORAL_FAN, 64, 0),
        BLUE_ICE(Minecraft.Block.BLUE_ICE, 64, 0),
        CONDUIT(Minecraft.Block.CONDUIT, 64, 0),
        POLISHED_GRANITE_STAIRS(Minecraft.Block.POLISHED_GRANITE_STAIRS, 64, 0),
        SMOOTH_RED_SANDSTONE_STAIRS(Minecraft.Block.SMOOTH_RED_SANDSTONE_STAIRS, 64, 0),
        MOSSY_STONE_BRICK_STAIRS(Minecraft.Block.MOSSY_STONE_BRICK_STAIRS, 64, 0),
        POLISHED_DIORITE_STAIRS(Minecraft.Block.POLISHED_DIORITE_STAIRS, 64, 0),
        MOSSY_COBBLESTONE_STAIRS(Minecraft.Block.MOSSY_COBBLESTONE_STAIRS, 64, 0),
        END_STONE_BRICK_STAIRS(Minecraft.Block.END_STONE_BRICK_STAIRS, 64, 0),
        STONE_STAIRS(Minecraft.Block.STONE_STAIRS, 64, 0),
        SMOOTH_SANDSTONE_STAIRS(Minecraft.Block.SMOOTH_SANDSTONE_STAIRS, 64, 0),
        SMOOTH_QUARTZ_STAIRS(Minecraft.Block.SMOOTH_QUARTZ_STAIRS, 64, 0),
        GRANITE_STAIRS(Minecraft.Block.GRANITE_STAIRS, 64, 0),
        ANDESITE_STAIRS(Minecraft.Block.ANDESITE_STAIRS, 64, 0),
        RED_NETHER_BRICK_STAIRS(Minecraft.Block.RED_NETHER_BRICK_STAIRS, 64, 0),
        POLISHED_ANDESITE_STAIRS(Minecraft.Block.POLISHED_ANDESITE_STAIRS, 64, 0),
        DIORITE_STAIRS(Minecraft.Block.DIORITE_STAIRS, 64, 0),
        POLISHED_GRANITE_SLAB(Minecraft.Block.POLISHED_GRANITE_SLAB, 64, 0),
        SMOOTH_RED_SANDSTONE_SLAB(Minecraft.Block.SMOOTH_RED_SANDSTONE_SLAB, 64, 0),
        MOSSY_STONE_BRICK_SLAB(Minecraft.Block.MOSSY_STONE_BRICK_SLAB, 64, 0),
        POLISHED_DIORITE_SLAB(Minecraft.Block.POLISHED_DIORITE_SLAB, 64, 0),
        MOSSY_COBBLESTONE_SLAB(Minecraft.Block.MOSSY_COBBLESTONE_SLAB, 64, 0),
        END_STONE_BRICK_SLAB(Minecraft.Block.END_STONE_BRICK_SLAB, 64, 0),
        SMOOTH_SANDSTONE_SLAB(Minecraft.Block.SMOOTH_SANDSTONE_SLAB, 64, 0),
        SMOOTH_QUARTZ_SLAB(Minecraft.Block.SMOOTH_QUARTZ_SLAB, 64, 0),
        GRANITE_SLAB(Minecraft.Block.GRANITE_SLAB, 64, 0),
        ANDESITE_SLAB(Minecraft.Block.ANDESITE_SLAB, 64, 0),
        RED_NETHER_BRICK_SLAB(Minecraft.Block.RED_NETHER_BRICK_SLAB, 64, 0),
        POLISHED_ANDESITE_SLAB(Minecraft.Block.POLISHED_ANDESITE_SLAB, 64, 0),
        DIORITE_SLAB(Minecraft.Block.DIORITE_SLAB, 64, 0),
        SCAFFOLDING(Minecraft.Block.SCAFFOLDING, 64, 0),
        IRON_DOOR(Minecraft.Block.IRON_DOOR, 64, 0),
        OAK_DOOR(Minecraft.Block.OAK_DOOR, 64, 0),
        SPRUCE_DOOR(Minecraft.Block.SPRUCE_DOOR, 64, 0),
        BIRCH_DOOR(Minecraft.Block.BIRCH_DOOR, 64, 0),
        JUNGLE_DOOR(Minecraft.Block.JUNGLE_DOOR, 64, 0),
        ACACIA_DOOR(Minecraft.Block.ACACIA_DOOR, 64, 0),
        DARK_OAK_DOOR(Minecraft.Block.DARK_OAK_DOOR, 64, 0),
        CRIMSON_DOOR(Minecraft.Block.CRIMSON_DOOR, 64, 0),
        WARPED_DOOR(Minecraft.Block.WARPED_DOOR, 64, 0),
        REPEATER(Minecraft.Block.REPEATER, 64, 0),
        COMPARATOR(Minecraft.Block.COMPARATOR, 64, 0),
        STRUCTURE_BLOCK(Minecraft.Block.STRUCTURE_BLOCK, 64, 0),
        JIGSAW(Minecraft.Block.JIGSAW, 64, 0),
        TURTLE_HELMET(1, 275),
        SCUTE(64, 0),
        FLINT_AND_STEEL(1, 64),
        APPLE(64, 0),
        BOW(1, 384),
        ARROW(64, 0),
        COAL(64, 0),
        CHARCOAL(64, 0),
        DIAMOND(64, 0),
        IRON_INGOT(64, 0),
        GOLD_INGOT(64, 0),
        NETHERITE_INGOT(64, 0),
        NETHERITE_SCRAP(64, 0),
        WOODEN_SWORD(1, 59),
        WOODEN_SHOVEL(1, 59),
        WOODEN_PICKAXE(1, 59),
        WOODEN_AXE(1, 59),
        WOODEN_HOE(1, 59),
        STONE_SWORD(1, 131),
        STONE_SHOVEL(1, 131),
        STONE_PICKAXE(1, 131),
        STONE_AXE(1, 131),
        STONE_HOE(1, 131),
        GOLDEN_SWORD(1, 32),
        GOLDEN_SHOVEL(1, 32),
        GOLDEN_PICKAXE(1, 32),
        GOLDEN_AXE(1, 32),
        GOLDEN_HOE(1, 32),
        IRON_SWORD(1, 250),
        IRON_SHOVEL(1, 250),
        IRON_PICKAXE(1, 250),
        IRON_AXE(1, 250),
        IRON_HOE(1, 250),
        DIAMOND_SWORD(1, 1561),
        DIAMOND_SHOVEL(1, 1561),
        DIAMOND_PICKAXE(1, 1561),
        DIAMOND_AXE(1, 1561),
        DIAMOND_HOE(1, 1561),
        NETHERITE_SWORD(1, 2031),
        NETHERITE_SHOVEL(1, 2031),
        NETHERITE_PICKAXE(1, 2031),
        NETHERITE_AXE(1, 2031),
        NETHERITE_HOE(1, 2031),
        STICK(64, 0),
        BOWL(64, 0),
        MUSHROOM_STEW(1, 0),
        STRING(Minecraft.Block.TRIPWIRE, 64, 0),
        FEATHER(64, 0),
        GUNPOWDER(64, 0),
        WHEAT_SEEDS(Minecraft.Block.WHEAT, 64, 0),
        WHEAT(64, 0),
        BREAD(64, 0),
        LEATHER_HELMET(1, 55),
        LEATHER_CHESTPLATE(1, 80),
        LEATHER_LEGGINGS(1, 75),
        LEATHER_BOOTS(1, 65),
        CHAINMAIL_HELMET(1, 165),
        CHAINMAIL_CHESTPLATE(1, 240),
        CHAINMAIL_LEGGINGS(1, 225),
        CHAINMAIL_BOOTS(1, 195),
        IRON_HELMET(1, 165),
        IRON_CHESTPLATE(1, 240),
        IRON_LEGGINGS(1, 225),
        IRON_BOOTS(1, 195),
        DIAMOND_HELMET(1, 363),
        DIAMOND_CHESTPLATE(1, 528),
        DIAMOND_LEGGINGS(1, 495),
        DIAMOND_BOOTS(1, 429),
        GOLDEN_HELMET(1, 77),
        GOLDEN_CHESTPLATE(1, 112),
        GOLDEN_LEGGINGS(1, 105),
        GOLDEN_BOOTS(1, 91),
        NETHERITE_HELMET(1, 407),
        NETHERITE_CHESTPLATE(1, 592),
        NETHERITE_LEGGINGS(1, 555),
        NETHERITE_BOOTS(1, 481),
        FLINT(64, 0),
        PORKCHOP(64, 0),
        COOKED_PORKCHOP(64, 0),
        PAINTING(64, 0),
        GOLDEN_APPLE(64, 0),
        ENCHANTED_GOLDEN_APPLE(64, 0),
        OAK_SIGN(Minecraft.Block.OAK_SIGN, 16, 0),
        SPRUCE_SIGN(Minecraft.Block.SPRUCE_SIGN, 16, 0),
        BIRCH_SIGN(Minecraft.Block.BIRCH_SIGN, 16, 0),
        JUNGLE_SIGN(Minecraft.Block.JUNGLE_SIGN, 16, 0),
        ACACIA_SIGN(Minecraft.Block.ACACIA_SIGN, 16, 0),
        DARK_OAK_SIGN(Minecraft.Block.DARK_OAK_SIGN, 16, 0),
        CRIMSON_SIGN(Minecraft.Block.CRIMSON_SIGN, 16, 0),
        WARPED_SIGN(Minecraft.Block.WARPED_SIGN, 16, 0),
        BUCKET(16, 0),
        WATER_BUCKET(1, 0),
        LAVA_BUCKET(1, 0),
        MINECART(1, 0),
        SADDLE(1, 0),
        REDSTONE(Minecraft.Block.REDSTONE_WIRE, 64, 0),
        SNOWBALL(64, 0),
        OAK_BOAT(1, 0),
        LEATHER(64, 0),
        MILK_BUCKET(1, 0),
        PUFFERFISH_BUCKET(1, 0),
        SALMON_BUCKET(1, 0),
        COD_BUCKET(1, 0),
        TROPICAL_FISH_BUCKET(1, 0),
        BRICK(64, 0),
        CLAY_BALL(64, 0),
        DRIED_KELP_BLOCK(Minecraft.Block.DRIED_KELP_BLOCK, 64, 0),
        PAPER(64, 0),
        BOOK(64, 0),
        SLIME_BALL(64, 0),
        CHEST_MINECART(1, 0),
        FURNACE_MINECART(1, 0),
        EGG(16, 0),
        COMPASS(64, 0),
        FISHING_ROD(1, 64),
        CLOCK(64, 0),
        GLOWSTONE_DUST(64, 0),
        COD(64, 0),
        SALMON(64, 0),
        TROPICAL_FISH(64, 0),
        PUFFERFISH(64, 0),
        COOKED_COD(64, 0),
        COOKED_SALMON(64, 0),
        INK_SAC(64, 0),
        COCOA_BEANS(Minecraft.Block.COCOA, 64, 0),
        LAPIS_LAZULI(64, 0),
        WHITE_DYE(64, 0),
        ORANGE_DYE(64, 0),
        MAGENTA_DYE(64, 0),
        LIGHT_BLUE_DYE(64, 0),
        YELLOW_DYE(64, 0),
        LIME_DYE(64, 0),
        PINK_DYE(64, 0),
        GRAY_DYE(64, 0),
        LIGHT_GRAY_DYE(64, 0),
        CYAN_DYE(64, 0),
        PURPLE_DYE(64, 0),
        BLUE_DYE(64, 0),
        BROWN_DYE(64, 0),
        GREEN_DYE(64, 0),
        RED_DYE(64, 0),
        BLACK_DYE(64, 0),
        BONE_MEAL(64, 0),
        BONE(64, 0),
        SUGAR(64, 0),
        CAKE(Minecraft.Block.CAKE, 1, 0),
        WHITE_BED(Minecraft.Block.WHITE_BED, 1, 0),
        ORANGE_BED(Minecraft.Block.ORANGE_BED, 1, 0),
        MAGENTA_BED(Minecraft.Block.MAGENTA_BED, 1, 0),
        LIGHT_BLUE_BED(Minecraft.Block.LIGHT_BLUE_BED, 1, 0),
        YELLOW_BED(Minecraft.Block.YELLOW_BED, 1, 0),
        LIME_BED(Minecraft.Block.LIME_BED, 1, 0),
        PINK_BED(Minecraft.Block.PINK_BED, 1, 0),
        GRAY_BED(Minecraft.Block.GRAY_BED, 1, 0),
        LIGHT_GRAY_BED(Minecraft.Block.LIGHT_GRAY_BED, 1, 0),
        CYAN_BED(Minecraft.Block.CYAN_BED, 1, 0),
        PURPLE_BED(Minecraft.Block.PURPLE_BED, 1, 0),
        BLUE_BED(Minecraft.Block.BLUE_BED, 1, 0),
        BROWN_BED(Minecraft.Block.BROWN_BED, 1, 0),
        GREEN_BED(Minecraft.Block.GREEN_BED, 1, 0),
        RED_BED(Minecraft.Block.RED_BED, 1, 0),
        BLACK_BED(Minecraft.Block.BLACK_BED, 1, 0),
        COOKIE(64, 0),
        FILLED_MAP(64, 0),
        SHEARS(1, 238),
        MELON_SLICE(64, 0),
        DRIED_KELP(64, 0),
        PUMPKIN_SEEDS(Minecraft.Block.PUMPKIN_STEM, 64, 0),
        MELON_SEEDS(Minecraft.Block.MELON_STEM, 64, 0),
        BEEF(64, 0),
        COOKED_BEEF(64, 0),
        CHICKEN(64, 0),
        COOKED_CHICKEN(64, 0),
        ROTTEN_FLESH(64, 0),
        ENDER_PEARL(16, 0),
        BLAZE_ROD(64, 0),
        GHAST_TEAR(64, 0),
        GOLD_NUGGET(64, 0),
        NETHER_WART(Minecraft.Block.NETHER_WART, 64, 0),
        POTION(16, 0),
        GLASS_BOTTLE(64, 0),
        SPIDER_EYE(64, 0),
        FERMENTED_SPIDER_EYE(64, 0),
        BLAZE_POWDER(64, 0),
        MAGMA_CREAM(64, 0),
        BREWING_STAND(Minecraft.Block.BREWING_STAND, 64, 0),
        CAULDRON(Minecraft.Block.CAULDRON, 64, 0),
        ENDER_EYE(64, 0),
        GLISTERING_MELON_SLICE(64, 0),
        BAT_SPAWN_EGG(64, 0),
        BEE_SPAWN_EGG(64, 0),
        BLAZE_SPAWN_EGG(64, 0),
        CAT_SPAWN_EGG(64, 0),
        CAVE_SPIDER_SPAWN_EGG(64, 0),
        CHICKEN_SPAWN_EGG(64, 0),
        COD_SPAWN_EGG(64, 0),
        COW_SPAWN_EGG(64, 0),
        CREEPER_SPAWN_EGG(64, 0),
        DOLPHIN_SPAWN_EGG(64, 0),
        DONKEY_SPAWN_EGG(64, 0),
        DROWNED_SPAWN_EGG(64, 0),
        ELDER_GUARDIAN_SPAWN_EGG(64, 0),
        ENDERMAN_SPAWN_EGG(64, 0),
        ENDERMITE_SPAWN_EGG(64, 0),
        EVOKER_SPAWN_EGG(64, 0),
        FOX_SPAWN_EGG(64, 0),
        GHAST_SPAWN_EGG(64, 0),
        GUARDIAN_SPAWN_EGG(64, 0),
        HOGLIN_SPAWN_EGG(64, 0),
        HORSE_SPAWN_EGG(64, 0),
        HUSK_SPAWN_EGG(64, 0),
        LLAMA_SPAWN_EGG(64, 0),
        MAGMA_CUBE_SPAWN_EGG(64, 0),
        MOOSHROOM_SPAWN_EGG(64, 0),
        MULE_SPAWN_EGG(64, 0),
        OCELOT_SPAWN_EGG(64, 0),
        PANDA_SPAWN_EGG(64, 0),
        PARROT_SPAWN_EGG(64, 0),
        PHANTOM_SPAWN_EGG(64, 0),
        PIG_SPAWN_EGG(64, 0),
        PIGLIN_SPAWN_EGG(64, 0),
        PIGLIN_BRUTE_SPAWN_EGG(64, 0),
        PILLAGER_SPAWN_EGG(64, 0),
        POLAR_BEAR_SPAWN_EGG(64, 0),
        PUFFERFISH_SPAWN_EGG(64, 0),
        RABBIT_SPAWN_EGG(64, 0),
        RAVAGER_SPAWN_EGG(64, 0),
        SALMON_SPAWN_EGG(64, 0),
        SHEEP_SPAWN_EGG(64, 0),
        SHULKER_SPAWN_EGG(64, 0),
        SILVERFISH_SPAWN_EGG(64, 0),
        SKELETON_SPAWN_EGG(64, 0),
        SKELETON_HORSE_SPAWN_EGG(64, 0),
        SLIME_SPAWN_EGG(64, 0),
        SPIDER_SPAWN_EGG(64, 0),
        SQUID_SPAWN_EGG(64, 0),
        STRAY_SPAWN_EGG(64, 0),
        STRIDER_SPAWN_EGG(64, 0),
        TRADER_LLAMA_SPAWN_EGG(64, 0),
        TROPICAL_FISH_SPAWN_EGG(64, 0),
        TURTLE_SPAWN_EGG(64, 0),
        VEX_SPAWN_EGG(64, 0),
        VILLAGER_SPAWN_EGG(64, 0),
        VINDICATOR_SPAWN_EGG(64, 0),
        WANDERING_TRADER_SPAWN_EGG(64, 0),
        WITCH_SPAWN_EGG(64, 0),
        WITHER_SKELETON_SPAWN_EGG(64, 0),
        WOLF_SPAWN_EGG(64, 0),
        ZOGLIN_SPAWN_EGG(64, 0),
        ZOMBIE_SPAWN_EGG(64, 0),
        ZOMBIE_HORSE_SPAWN_EGG(64, 0),
        ZOMBIE_VILLAGER_SPAWN_EGG(64, 0),
        ZOMBIFIED_PIGLIN_SPAWN_EGG(64, 0),
        EXPERIENCE_BOTTLE(64, 0),
        FIRE_CHARGE(64, 0),
        WRITABLE_BOOK(1, 0),
        WRITTEN_BOOK(16, 0),
        EMERALD(64, 0),
        ITEM_FRAME(64, 0),
        FLOWER_POT(Minecraft.Block.FLOWER_POT, 64, 0),
        CARROT(Minecraft.Block.CARROTS, 64, 0),
        POTATO(Minecraft.Block.POTATOES, 64, 0),
        BAKED_POTATO(64, 0),
        POISONOUS_POTATO(64, 0),
        MAP(64, 0),
        GOLDEN_CARROT(64, 0),
        SKELETON_SKULL(Minecraft.Block.SKELETON_SKULL, 64, 0),
        WITHER_SKELETON_SKULL(Minecraft.Block.WITHER_SKELETON_SKULL, 64, 0),
        PLAYER_HEAD(Minecraft.Block.PLAYER_HEAD, 64, 0),
        ZOMBIE_HEAD(Minecraft.Block.ZOMBIE_HEAD, 64, 0),
        CREEPER_HEAD(Minecraft.Block.CREEPER_HEAD, 64, 0),
        DRAGON_HEAD(Minecraft.Block.DRAGON_HEAD, 64, 0),
        CARROT_ON_A_STICK(1, 25),
        WARPED_FUNGUS_ON_A_STICK(1, 100),
        NETHER_STAR(64, 0),
        PUMPKIN_PIE(64, 0),
        FIREWORK_ROCKET(64, 0),
        FIREWORK_STAR(64, 0),
        ENCHANTED_BOOK(1, 0),
        NETHER_BRICK(64, 0),
        QUARTZ(64, 0),
        TNT_MINECART(1, 0),
        HOPPER_MINECART(1, 0),
        PRISMARINE_SHARD(64, 0),
        PRISMARINE_CRYSTALS(64, 0),
        RABBIT(64, 0),
        COOKED_RABBIT(64, 0),
        RABBIT_STEW(1, 0),
        RABBIT_FOOT(64, 0),
        RABBIT_HIDE(64, 0),
        ARMOR_STAND(16, 0),
        IRON_HORSE_ARMOR(1, 0),
        GOLDEN_HORSE_ARMOR(1, 0),
        DIAMOND_HORSE_ARMOR(1, 0),
        LEATHER_HORSE_ARMOR(1, 0),
        LEAD(64, 0),
        NAME_TAG(64, 0),
        COMMAND_BLOCK_MINECART(1, 0),
        MUTTON(64, 0),
        COOKED_MUTTON(64, 0),
        WHITE_BANNER(Minecraft.Block.WHITE_BANNER, 16, 0),
        ORANGE_BANNER(Minecraft.Block.ORANGE_BANNER, 16, 0),
        MAGENTA_BANNER(Minecraft.Block.MAGENTA_BANNER, 16, 0),
        LIGHT_BLUE_BANNER(Minecraft.Block.LIGHT_BLUE_BANNER, 16, 0),
        YELLOW_BANNER(Minecraft.Block.YELLOW_BANNER, 16, 0),
        LIME_BANNER(Minecraft.Block.LIME_BANNER, 16, 0),
        PINK_BANNER(Minecraft.Block.PINK_BANNER, 16, 0),
        GRAY_BANNER(Minecraft.Block.GRAY_BANNER, 16, 0),
        LIGHT_GRAY_BANNER(Minecraft.Block.LIGHT_GRAY_BANNER, 16, 0),
        CYAN_BANNER(Minecraft.Block.CYAN_BANNER, 16, 0),
        PURPLE_BANNER(Minecraft.Block.PURPLE_BANNER, 16, 0),
        BLUE_BANNER(Minecraft.Block.BLUE_BANNER, 16, 0),
        BROWN_BANNER(Minecraft.Block.BROWN_BANNER, 16, 0),
        GREEN_BANNER(Minecraft.Block.GREEN_BANNER, 16, 0),
        RED_BANNER(Minecraft.Block.RED_BANNER, 16, 0),
        BLACK_BANNER(Minecraft.Block.BLACK_BANNER, 16, 0),
        END_CRYSTAL(64, 0),
        CHORUS_FRUIT(64, 0),
        POPPED_CHORUS_FRUIT(64, 0),
        BEETROOT(64, 0),
        BEETROOT_SEEDS(Minecraft.Block.BEETROOTS, 64, 0),
        BEETROOT_SOUP(1, 0),
        DRAGON_BREATH(64, 0),
        SPLASH_POTION(1, 0),
        SPECTRAL_ARROW(64, 0),
        TIPPED_ARROW(64, 0),
        LINGERING_POTION(1, 0),
        SHIELD(1, 336),
        ELYTRA(1, 432),
        SPRUCE_BOAT(1, 0),
        BIRCH_BOAT(1, 0),
        JUNGLE_BOAT(1, 0),
        ACACIA_BOAT(1, 0),
        DARK_OAK_BOAT(1, 0),
        TOTEM_OF_UNDYING(1, 0),
        SHULKER_SHELL(64, 0),
        IRON_NUGGET(64, 0),
        KNOWLEDGE_BOOK(1, 0),
        DEBUG_STICK(1, 0),
        MUSIC_DISC_13(1, 0),
        MUSIC_DISC_CAT(1, 0),
        MUSIC_DISC_BLOCKS(1, 0),
        MUSIC_DISC_CHIRP(1, 0),
        MUSIC_DISC_FAR(1, 0),
        MUSIC_DISC_MALL(1, 0),
        MUSIC_DISC_MELLOHI(1, 0),
        MUSIC_DISC_STAL(1, 0),
        MUSIC_DISC_STRAD(1, 0),
        MUSIC_DISC_WARD(1, 0),
        MUSIC_DISC_11(1, 0),
        MUSIC_DISC_WAIT(1, 0),
        MUSIC_DISC_PIGSTEP(1, 0),
        TRIDENT(1, 250),
        PHANTOM_MEMBRANE(64, 0),
        NAUTILUS_SHELL(64, 0),
        HEART_OF_THE_SEA(64, 0),
        CROSSBOW(1, 326),
        SUSPICIOUS_STEW(1, 0),
        LOOM(Minecraft.Block.LOOM, 64, 0),
        FLOWER_BANNER_PATTERN(1, 0),
        CREEPER_BANNER_PATTERN(1, 0),
        SKULL_BANNER_PATTERN(1, 0),
        MOJANG_BANNER_PATTERN(1, 0),
        GLOBE_BANNER_PATTERN(1, 0),
        PIGLIN_BANNER_PATTERN(1, 0),
        COMPOSTER(Minecraft.Block.COMPOSTER, 64, 0),
        BARREL(Minecraft.Block.BARREL, 64, 0),
        SMOKER(Minecraft.Block.SMOKER, 64, 0),
        BLAST_FURNACE(Minecraft.Block.BLAST_FURNACE, 64, 0),
        CARTOGRAPHY_TABLE(Minecraft.Block.CARTOGRAPHY_TABLE, 64, 0),
        FLETCHING_TABLE(Minecraft.Block.FLETCHING_TABLE, 64, 0),
        GRINDSTONE(Minecraft.Block.GRINDSTONE, 64, 0),
        LECTERN(Minecraft.Block.LECTERN, 64, 0),
        SMITHING_TABLE(Minecraft.Block.SMITHING_TABLE, 64, 0),
        STONECUTTER(Minecraft.Block.STONECUTTER, 64, 0),
        BELL(Minecraft.Block.BELL, 64, 0),
        LANTERN(Minecraft.Block.LANTERN, 64, 0),
        SOUL_LANTERN(Minecraft.Block.SOUL_LANTERN, 64, 0),
        SWEET_BERRIES(Minecraft.Block.SWEET_BERRY_BUSH, 64, 0),
        CAMPFIRE(Minecraft.Block.CAMPFIRE, 64, 0),
        SOUL_CAMPFIRE(Minecraft.Block.SOUL_CAMPFIRE, 64, 0),
        SHROOMLIGHT(Minecraft.Block.SHROOMLIGHT, 64, 0),
        HONEYCOMB(64, 0),
        BEE_NEST(Minecraft.Block.BEE_NEST, 64, 0),
        BEEHIVE(Minecraft.Block.BEEHIVE, 64, 0),
        HONEY_BOTTLE(16, 0),
        HONEY_BLOCK(Minecraft.Block.HONEY_BLOCK, 64, 0),
        HONEYCOMB_BLOCK(Minecraft.Block.HONEYCOMB_BLOCK, 64, 0),
        LODESTONE(Minecraft.Block.LODESTONE, 64, 0),
        NETHERITE_BLOCK(Minecraft.Block.NETHERITE_BLOCK, 64, 0),
        ANCIENT_DEBRIS(Minecraft.Block.ANCIENT_DEBRIS, 64, 0),
        TARGET(Minecraft.Block.TARGET, 64, 0),
        CRYING_OBSIDIAN(Minecraft.Block.CRYING_OBSIDIAN, 64, 0),
        BLACKSTONE(Minecraft.Block.BLACKSTONE, 64, 0),
        BLACKSTONE_SLAB(Minecraft.Block.BLACKSTONE_SLAB, 64, 0),
        BLACKSTONE_STAIRS(Minecraft.Block.BLACKSTONE_STAIRS, 64, 0),
        GILDED_BLACKSTONE(Minecraft.Block.GILDED_BLACKSTONE, 64, 0),
        POLISHED_BLACKSTONE(Minecraft.Block.POLISHED_BLACKSTONE, 64, 0),
        POLISHED_BLACKSTONE_SLAB(Minecraft.Block.POLISHED_BLACKSTONE_SLAB, 64, 0),
        POLISHED_BLACKSTONE_STAIRS(Minecraft.Block.POLISHED_BLACKSTONE_STAIRS, 64, 0),
        CHISELED_POLISHED_BLACKSTONE(Minecraft.Block.CHISELED_POLISHED_BLACKSTONE, 64, 0),
        POLISHED_BLACKSTONE_BRICKS(Minecraft.Block.POLISHED_BLACKSTONE_BRICKS, 64, 0),
        POLISHED_BLACKSTONE_BRICK_SLAB(Minecraft.Block.POLISHED_BLACKSTONE_BRICK_SLAB, 64, 0),
        POLISHED_BLACKSTONE_BRICK_STAIRS(Minecraft.Block.POLISHED_BLACKSTONE_BRICK_STAIRS, 64, 0),
        CRACKED_POLISHED_BLACKSTONE_BRICKS(Minecraft.Block.CRACKED_POLISHED_BLACKSTONE_BRICKS, 64, 0),
        RESPAWN_ANCHOR(Minecraft.Block.RESPAWN_ANCHOR, 64, 0);

        private final BlockType block;
        private final int maxStackSize;
        private final int maxDamage;

        Item(int maxStackSize, int maxDamage) {
            this(null, maxStackSize, maxDamage);
        }

        Item(BlockType block, int maxStackSize, int maxDamage) {
            this.block = block;
            this.maxStackSize = maxStackSize;
            this.maxDamage = maxDamage;
        }

        @Override
        public boolean isBlockItem() {
            return block != null;
        }

        @Override
        public BlockType getBlock() {
            return block;
        }

        @Override
        public int getMaxStackSize() {
            return maxStackSize;
        }

        @Override
        public int getMaxDamage() {
            return maxDamage;
        }
    }

    public enum Entity implements EntityType {
        AREA_EFFECT_CLOUD,
        ARMOR_STAND,
        ARROW,
        BAT,
        BEE,
        BLAZE,
        BOAT,
        CAT,
        CAVE_SPIDER,
        CHICKEN,
        COD,
        COW,
        CREEPER,
        DOLPHIN,
        DONKEY,
        DRAGON_FIREBALL,
        DROWNED,
        ELDER_GUARDIAN,
        END_CRYSTAL,
        ENDER_DRAGON,
        ENDERMAN,
        ENDERMITE,
        EVOKER,
        EVOKER_FANGS,
        EXPERIENCE_ORB,
        EYE_OF_ENDER,
        FALLING_BLOCK,
        FIREWORK_ROCKET,
        FOX,
        GHAST,
        GIANT,
        GUARDIAN,
        HOGLIN,
        HORSE,
        HUSK,
        ILLUSIONER,
        IRON_GOLEM,
        ITEM,
        ITEM_FRAME,
        FIREBALL,
        LEASH_KNOT,
        LIGHTNING_BOLT,
        LLAMA,
        LLAMA_SPIT,
        MAGMA_CUBE,
        MINECART,
        CHEST_MINECART,
        COMMAND_BLOCK_MINECART,
        FURNACE_MINECART,
        HOPPER_MINECART,
        SPAWNER_MINECART,
        TNT_MINECART,
        MULE,
        MOOSHROOM,
        OCELOT,
        PAINTING,
        PANDA,
        PARROT,
        PHANTOM,
        PIG,
        PIGLIN,
        PIGLIN_BRUTE,
        PILLAGER,
        POLAR_BEAR,
        TNT,
        PUFFERFISH,
        RABBIT,
        RAVAGER,
        SALMON,
        SHEEP,
        SHULKER,
        SHULKER_BULLET,
        SILVERFISH,
        SKELETON,
        SKELETON_HORSE,
        SLIME,
        SMALL_FIREBALL,
        SNOW_GOLEM,
        SNOWBALL,
        SPECTRAL_ARROW,
        SPIDER,
        SQUID,
        STRAY,
        STRIDER,
        EGG,
        ENDER_PEARL,
        EXPERIENCE_BOTTLE,
        POTION,
        TRIDENT,
        TRADER_LLAMA,
        TROPICAL_FISH,
        TURTLE,
        VEX,
        VILLAGER,
        VINDICATOR,
        WANDERING_TRADER,
        WITCH,
        WITHER,
        WITHER_SKELETON,
        WITHER_SKULL,
        WOLF,
        ZOGLIN,
        ZOMBIE,
        ZOMBIE_HORSE,
        ZOMBIE_VILLAGER,
        ZOMBIFIED_PIGLIN,
        PLAYER,
        FISHING_BOBBER
    }
}
